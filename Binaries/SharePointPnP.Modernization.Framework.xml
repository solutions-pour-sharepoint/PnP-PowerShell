<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SharePointPnP.Modernization.Framework</name>
    </assembly>
    <members>
        <member name="T:SharePointPnP.Modernization.Framework.Delve.DelvePageTransformationInformation">
            <summary>
            Information to initiate the transformation of a Delve blog page
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Delve.DelvePageTransformationInformation.#ctor">
            <summary>
            For internal use only
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Delve.DelvePageTransformationInformation.#ctor(Microsoft.SharePoint.Client.ListItem)">
            <summary>
            Instantiates the page transformation class
            </summary>
            <param name="sourcePage">Page we want to transform</param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Delve.DelvePageTransformationInformation.#ctor(Microsoft.SharePoint.Client.ListItem,System.Boolean)">
            <summary>
            Instantiates the page transformation class
            </summary>
            <param name="sourcePage">Page we want to transform</param>
            <param name="overwrite">Do we overwrite the target page if it already exists</param>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Delve.DelvePageTransformationInformation.SetAuthorInPageHeader">
            <summary>
            Sets the page author in the page header similar to the original page author
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Delve.DelvePageTransformationInformation.KeepSubTitle">
            <summary>
            Converts the sub title of a Delve blog page as modern page topic header
            </summary>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Delve.DelvePageTransformator">
            <summary>
            Transformator that convers a Delve blog page into a modern client side page
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Delve.DelvePageTransformator.#ctor(Microsoft.SharePoint.Client.ClientContext,Microsoft.SharePoint.Client.ClientContext)">
            <summary>
            Creates a page transformator instance with a target destination of a target web e.g. Modern/Communication Site
            </summary>
            <param name="sourceClientContext">ClientContext of the site holding the page</param>
            <param name="targetClientContext">ClientContext of the site that will receive the modernized page</param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Delve.DelvePageTransformator.#ctor(Microsoft.SharePoint.Client.ClientContext)">
            <summary>
            Creates a page transformator instance
            </summary>
            <param name="sourceClientContext">ClientContext of the site holding the page</param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Delve.DelvePageTransformator.#ctor(Microsoft.SharePoint.Client.ClientContext,System.String)">
            <summary>
            Creates a page transformator instance
            </summary>
            <param name="sourceClientContext">ClientContext of the site holding the page</param>
            <param name="pageTransformationFile">Used page mapping file</param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Delve.DelvePageTransformator.#ctor(Microsoft.SharePoint.Client.ClientContext,Microsoft.SharePoint.Client.ClientContext,System.String)">
            <summary>
            Creates a page transformator instance
            </summary>
            <param name="sourceClientContext">ClientContext of the site holding the page</param>
            <param name="targetClientContext">ClientContext of the site that will receive the modernized page</param>
            <param name="pageTransformationFile">Used page mapping file</param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Delve.DelvePageTransformator.#ctor(Microsoft.SharePoint.Client.ClientContext,SharePointPnP.Modernization.Framework.PageTransformation)">
            <summary>
            Creates a page transformator instance
            </summary>
            <param name="sourceClientContext">ClientContext of the site holding the page</param>
            <param name="pageTransformationModel">Page transformation model</param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Delve.DelvePageTransformator.#ctor(Microsoft.SharePoint.Client.ClientContext,Microsoft.SharePoint.Client.ClientContext,SharePointPnP.Modernization.Framework.PageTransformation)">
            <summary>
            Creates a page transformator instance
            </summary>
            <param name="sourceClientContext">ClientContext of the site holding the page</param>
            <param name="targetClientContext">ClientContext of the site that will receive the modernized page</param>
            <param name="pageTransformationModel">Page transformation model</param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Delve.DelvePageTransformator.Transform(SharePointPnP.Modernization.Framework.Delve.DelvePageTransformationInformation)">
            <summary>
            Transform the page
            </summary>
            <param name="pageTransformationInformation">Information about the page to transform</param>
            <returns>The path to the created modern page</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Delve.DelvePageTransformator.DetailSettingsAsLogEntries(SharePointPnP.Modernization.Framework.Delve.DelvePageTransformationInformation)">
            <summary>
            Use reflection to read the object properties and detail the values
            </summary>
            <param name="pti">PageTransformationInformation object</param>
            <returns></returns>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Entities.AssetTransferredEntity">
            <summary>
            Model for asset transfer status for references
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Entities.AssetTransferredEntity.SourceAssetUrl">
            <summary>
            Source web part URL reference - for checking if transfer occurred before
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Entities.AssetTransferredEntity.TargetAssetFolderUrl">
            <summary>
            Target web part URL reference - for checking if transfer occurred before
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Entities.AssetTransferredEntity.TargetAssetTransferredUrl">
            <summary>
            Store the final URL for the asset that has been transferred
            </summary>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Entities.ResolvedUser">
            <summary>
            Class used to cache a user that was resolved via EnsureUser
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Entities.ResolvedUser.LoginName">
            <summary>
            Loginname of the user
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Entities.ResolvedUser.Id">
            <summary>
            Id of the user
            </summary>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Entities.TransformationLogAnalysis">
            <summary>
            Transformation analysis report
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Entities.TransformationLogAnalysis.#ctor">
            <summary>
            Constructor for transformation report
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Entities.TransformationLogAnalysis.SourcePage">
            <summary>
            Source page name
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Entities.TransformationLogAnalysis.SourceSite">
            <summary>
            Source site
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Entities.TransformationLogAnalysis.TargetPage">
            <summary>
            Target page name
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Entities.TransformationLogAnalysis.TargetSite">
            <summary>
            Target site
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Entities.TransformationLogAnalysis.ReportDate">
            <summary>
            Date report generated
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Entities.TransformationLogAnalysis.BaseSourceUrl">
            <summary>
            Base source url
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Entities.TransformationLogAnalysis.BaseTargetUrl">
            <summary>
            Base target url
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Entities.TransformationLogAnalysis.TransformationDuration">
            <summary>
            Duration of the page tranformation
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Entities.TransformationLogAnalysis.IsFirstAnalysis">
            <summary>
            Indication if this was the first transformation report added
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Entities.TransformationLogAnalysis.PageId">
            <summary>
            ID used to group entries by transformed page
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Entities.TransformationLogAnalysis.AssetsTransferred">
            <summary>
            Log entries for the transferred assets
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Entities.TransformationLogAnalysis.Warnings">
            <summary>
            List of warnings raised
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Entities.TransformationLogAnalysis.Errors">
            <summary>
            List of errors raised
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Entities.TransformationLogAnalysis.CriticalErrors">
            <summary>
            List of critical application error
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Entities.TransformationLogAnalysis.PageLogsOrdered">
            <summary>
            Page Logs ordered
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Entities.TransformationLogAnalysis.TransformationVerboseSummary">
            <summary>
            Logs that contain summary data for verbose logging
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Entities.TransformationLogAnalysis.TransformationVerboseDetails">
            <summary>
            Logs that contain verbose details of this transformation
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Entities.TransformationLogAnalysis.TransformationSettings">
            <summary>
            List containting the applied transformation settings
            </summary>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Entities.UrlMapping">
            <summary>
            Url map entry
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Entities.UrlMapping.SourceUrl">
            <summary>
            Url to be replaced
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Entities.UrlMapping.TargetUrl">
            <summary>
            Url replacement value
            </summary>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Entities.UserEntity">
            <summary>
            Class to hold information about a given user
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Entities.UserEntity.Id">
            <summary>
            Id of the user
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Entities.UserEntity.Upn">
            <summary>
            Upn of the user
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Entities.UserEntity.Name">
            <summary>
            Name of the user
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Entities.UserEntity.Role">
            <summary>
            Role of the user
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Entities.UserEntity.LoginName">
            <summary>
            Loginname of the user
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Entities.UserEntity.IsGroup">
            <summary>
            Is this a group?
            </summary>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Entities.UserMappingEntity">
            <summary>
            Class to hold a mapping between a user in the source site and a user in the target site
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Entities.UserMappingEntity.SourceUser">
            <summary>
            Source user reference
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Entities.UserMappingEntity.TargetUser">
            <summary>
            Target user reference
            </summary>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Entities.WebServiceWebPartProperties">
            <summary>
            Entity to describe a web part on a wiki or webpart page called from web services
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Entities.WebServiceWebPartProperties.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Entities.WebServiceWebPartProperties.Type">
            <summary>
            Type of the web part
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Entities.WebServiceWebPartProperties.Id">
            <summary>
            Id of the web part
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Entities.WebServiceWebPartProperties.ControlId">
            <summary>
            Control id of the web part
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Entities.WebServiceWebPartProperties.Properties">
            <summary>
            Dictionary with web part properties
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Entities.WebServiceWebPartProperties.ZoneId">
            <summary>
            Zone id of the web part
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Entities.WebServiceWebPartProperties.TypeShort">
            <summary>
            Returns the shortened web part type name
            </summary>
            <returns>Shortened web part type name</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Entities.WebServiceWebPartProperties.PropertiesAsStringObjectDictionary">
            <summary>
            Returns Dictionary with web part properties as string,object 
            </summary>
            <returns>Dictionary with web part properties as string,object</returns>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Entities.WebServiceWebPartEntity">
            <summary>
            Entity to describe a web part on a wiki or webpart page called from web services
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Entities.WebServiceWebPartEntity.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Entities.WebServiceWebPartEntity.Type">
            <summary>
            Type of the web part
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Entities.WebServiceWebPartEntity.Id">
            <summary>
            Id of the web part
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Entities.WebServiceWebPartEntity.Properties">
            <summary>
            Dictionary with web part properties
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Entities.WebServiceWebPartEntity.TypeShort">
            <summary>
            Returns the shortened web part type name
            </summary>
            <returns>Shortened web part type name</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Entities.WebServiceWebPartEntity.PropertiesAsStringObjectDictionary">
            <summary>
            Returns Dictionary with web part properties as string,object 
            </summary>
            <returns>Dictionary with web part properties as string,object</returns>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Entities.AudienceEntity">
            <summary>
            Holds information about the defined audiences (used by modernization scanner)
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Entities.AudienceEntity.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Entities.AudienceEntity.GlobalAudiences">
            <summary>
            List of defined global audiences
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Entities.AudienceEntity.SecurityGroups">
            <summary>
            List of security group based audiences
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Entities.AudienceEntity.SharePointGroups">
            <summary>
            List of SharePoint group based audiences
            </summary>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Entities.ListItemPermission">
            <summary>
            Class used to temporarily hold list item level permissions that need to be re-applied
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Entities.ListItemPermission.RoleAssignments">
            <summary>
            Roles assigned to the list item
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Entities.ListItemPermission.Principals">
            <summary>
            Resolved principals used in those roles, kept for performance reasons
            </summary>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Entities.WebPartEntity">
            <summary>
            Entity to describe a web part on a wiki or webpart page
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Entities.WebPartEntity.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Entities.WebPartEntity.Type">
            <summary>
            Web part type
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Entities.WebPartEntity.Id">
            <summary>
            Web part id
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Entities.WebPartEntity.ServerControlId">
            <summary>
            Web part server control id
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Entities.WebPartEntity.ZoneId">
            <summary>
            Web part zone id
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Entities.WebPartEntity.Hidden">
            <summary>
            Is this a visible web part or not
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Entities.WebPartEntity.IsClosed">
            <summary>
            Is this web part closed or not
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Entities.WebPartEntity.Title">
            <summary>
            Title of the web part
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Entities.WebPartEntity.Row">
            <summary>
            Web part position: row
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Entities.WebPartEntity.Column">
            <summary>
            Web part position: column
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Entities.WebPartEntity.Order">
            <summary>
             Web part position: order
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Entities.WebPartEntity.ZoneIndex">
            <summary>
            Web part position: zone index
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Entities.WebPartEntity.Properties">
            <summary>
            Dictionary with web part properties
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Entities.WebPartEntity.TypeShort">
            <summary>
            Returns the shortened web part type name
            </summary>
            <returns>Shortened web part type name</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Entities.WebPartEntity.Json">
            <summary>
            Returns this instance as Json
            </summary>
            <returns>Json serialized string of this web part instance</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Extensions.FileFolderExtensions.GetFileByServerRelativeUrlAsString(Microsoft.SharePoint.Client.Web,System.String)">
            <summary>
            Returns a file as string
            </summary>
            <param name="web">The Web to process</param>
            <param name="serverRelativeUrl">The server relative URL to the file</param>
            <returns>The file contents as a string</returns>
            <remarks>#
            
                Based on https://github.com/SharePoint/PnP-Sites-Core/blob/master/Core/OfficeDevPnP.Core/Extensions/FileFolderExtensions.cs
                Modified to force onpremises support
                
            </remarks>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Extensions.StringExtensions">
            <summary>
            Class holding extension methods on the System.string class
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Extensions.StringExtensions.ContainsIgnoringCasing(System.String,System.String,System.StringComparison)">
            <summary>
            Determines if a string exists in another string regardless of casing
            </summary>
            <param name="value">original string</param>
            <param name="comparedWith">string to compare with</param>
            <param name="stringComparison">optional comparison mode</param>
            <returns></returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Extensions.StringExtensions.PrependIfNotNull(System.String,System.String)">
            <summary>
            Prepends string to another including null checking
            </summary>
            <param name="value"></param>
            <param name="prependString"></param>
            <returns></returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Extensions.StringExtensions.StripRelativeUrlSectionString(System.String)">
            <summary>
            Removes a relative section of by string where context not available
            </summary>
            <param name="value"></param>
            <param name="seperator"></param>
            <param name="instanceFrom"></param>
            <returns></returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Extensions.StringExtensions.GetBaseUrl(System.String)">
            <summary>
            Gets base url from string
            </summary>
            <param name="sourceSite"></param>
            <returns></returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Extensions.StringExtensions.GetTypeShort(System.String)">
            <summary>
            Get type in short form
            </summary>
            <param name="typeValue"></param>
            <returns></returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Extensions.StringExtensions.GetUserName(System.String)">
            <summary>
            Gets the user name from a provided login name
            </summary>
            <param name="loginName">Login name</param>
            <returns>User name</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Extensions.StringExtensions.InferClassNameFromNameSpace(System.String)">
            <summary>
            Gets classname from type
            </summary>
            <param name="typeName"></param>
            <returns></returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Extensions.StringExtensions.Replace(System.String,System.String,System.String,System.StringComparison)">
            <summary>
            Returns a new string in which all occurrences of a specified string in the current instance are replaced with another 
            specified string according the type of search to use for the specified string.
            Copied from https://stackoverflow.com/questions/6275980/string-replace-ignoring-case
            </summary>
            <param name="str">The string performing the replace method.</param>
            <param name="oldValue">The string to be replaced.</param>
            <param name="newValue">The string replace all occurrences of <paramref name="oldValue"/>. 
            If value is equal to <c>null</c>, than all occurrences of <paramref name="oldValue"/> will be removed from the <paramref name="str"/>.</param>
            <param name="comparisonType">One of the enumeration values that specifies the rules for the search.</param>
            <returns>A string that is equivalent to the current string except that all instances of <paramref name="oldValue"/> are replaced with <paramref name="newValue"/>. 
            If <paramref name="oldValue"/> is not found in the current instance, the method returns the current instance unchanged.</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Extensions.StringExtensions.CleanForJSON(System.String)">
            <summary>
            Prepares a string for json inclusion
            Copied from https://stackoverflow.com/questions/1242118/how-to-escape-json-string
            </summary>
            <param name="s">string to prepare</param>
            <returns>json ready string</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Pages.DelvePage.#ctor(Microsoft.SharePoint.Client.ListItem,SharePointPnP.Modernization.Framework.PageTransformation)">
            <summary>
            Instantiates a web part page object
            </summary>
            <param name="page">ListItem holding the page to analyze</param>
            <param name="pageTransformation">Page transformation information</param>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Pages.PublishingPageOnPremises">
            <summary>
            Analyzes a publishing page
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Pages.PublishingPageOnPremises.#ctor(Microsoft.SharePoint.Client.ListItem,SharePointPnP.Modernization.Framework.PageTransformation,SharePointPnP.Modernization.Framework.Transform.BaseTransformationInformation,System.Collections.Generic.IList{SharePointPnP.Modernization.Framework.Telemetry.ILogObserver})">
            <summary>
            Instantiates a publishing page object
            </summary>
            <param name="page">ListItem holding the page to analyze</param>
            <param name="pageTransformation">Page transformation information</param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Pages.PublishingPageOnPremises.#ctor(Microsoft.SharePoint.Client.ListItem,SharePointPnP.Modernization.Framework.PageTransformation,SharePointPnP.Modernization.Framework.Publishing.PublishingPageTransformation,SharePointPnP.Modernization.Framework.Transform.BaseTransformationInformation,Microsoft.SharePoint.Client.ClientContext,System.Collections.Generic.IList{SharePointPnP.Modernization.Framework.Telemetry.ILogObserver})">
            <summary>
            Instantiates a publishing page object
            </summary>
            <param name="page">ListItem holding the page to analyze</param>
            <param name="pageTransformation">Page transformation information</param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Pages.PublishingPageOnPremises.Analyze(SharePointPnP.Modernization.Framework.Publishing.PageLayout)">
            <summary>
            Analyses a publishing page
            </summary>
            <returns>Information about the analyzed publishing page</returns>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Pages.WebPartPageOnPremises">
            <summary>
            Analyzes a web part page for SP2010 to SP2016 on-premises SharePoint
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Pages.WebPartPageOnPremises.#ctor(Microsoft.SharePoint.Client.ListItem,Microsoft.SharePoint.Client.File,SharePointPnP.Modernization.Framework.PageTransformation)">
            <summary>
            Instantiates a web part page object for on-premises environments
            </summary>
            <param name="page">ListItem holding the page to analyze</param>
            <param name="pageFile">File holding the page (for pages living outside of a library)</param>
            <param name="pageTransformation">Page transformation information</param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Pages.WebPartPageOnPremises.Analyze(System.Boolean)">
            <summary>
            Analyses a webpart page from on-premises environment
            </summary>
            <param name="includeTitleBarWebPart"></param>
            <returns></returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Pages.WebPartPageOnPremises.GetLayoutFromWebServices(System.String)">
            <summary>
            Gets and parses the layout from the web services URL
            </summary>
            <param name="webPartPageUrl"></param>
            <returns></returns>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Pages.BasePage">
            <summary>
            Base class for the page analyzers
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Pages.BasePage.#ctor(Microsoft.SharePoint.Client.ListItem,Microsoft.SharePoint.Client.File,SharePointPnP.Modernization.Framework.PageTransformation,System.Collections.Generic.IList{SharePointPnP.Modernization.Framework.Telemetry.ILogObserver})">
            <summary>
            Constructs the base page class instance
            </summary>
            <param name="page">page ListItem</param>
            <param name="pageFile">page File</param>
            <param name="pageTransformation">page transformation model to use for extraction or transformation</param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Pages.BasePage.GetType(System.String)">
            <summary>
            Get's the type of the web part
            </summary>
            <param name="webPartXml">Web part xml to analyze</param>
            <returns>Type of the web part as fully qualified name</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Pages.BasePage.LoadWebPartsInWikiContentFromServer(System.Collections.Generic.List{SharePointPnP.Modernization.Framework.Entities.WebPartEntity},Microsoft.SharePoint.Client.File,System.Collections.Generic.List{SharePointPnP.Modernization.Framework.Pages.BasePage.WebPartPlaceHolder})">
            <summary>
            Load Web Parts from Wiki Content page on Online Server
            </summary>
            <param name="webparts"></param>
            <param name="wikiPage"></param>
            <param name="webPartsToRetrieve"></param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Pages.BasePage.LoadWebPartsInWikiContentFromOnPremisesServer(System.Collections.Generic.List{SharePointPnP.Modernization.Framework.Entities.WebPartEntity},Microsoft.SharePoint.Client.File,System.Collections.Generic.List{SharePointPnP.Modernization.Framework.Pages.BasePage.WebPartPlaceHolder})">
            <summary>
            Load Web Parts from Wiki Content page on On-Premises Server
            </summary>
            <param name="webparts"></param>
            <param name="wikiPage"></param>
            <param name="webPartsToRetrieve"></param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Pages.BasePage.CreateWikiTextPart(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Stores text content as a fake web part
            </summary>
            <param name="wikiTextPartContent">Text to store</param>
            <param name="row">Row of the fake web part</param>
            <param name="col">Column of the fake web part</param>
            <param name="order">Order inside the row/column</param>
            <returns>A web part entity to add to the collection</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Pages.BasePage.ContainsWebPart(AngleSharp.Dom.Html.IHtmlElement)">
            <summary>
            Does the tree of nodes somewhere contain a web part?
            </summary>
            <param name="element">Html content to analyze</param>
            <returns>True if it contains a web part</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Pages.BasePage.StripWebPart(AngleSharp.Dom.Html.IHtmlElement)">
            <summary>
            Strips the div holding the web part from the html
            </summary>
            <param name="element">Html element holding one or more web part divs</param>
            <returns>Cleaned html with a placeholder for the web part div</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Pages.BasePage.GetTypeFromProperties(System.Collections.Generic.Dictionary{System.String,System.Object},System.Boolean)">
            <summary>
            Get's the type of the web part by detecting if from the available properties
            </summary>
            <param name="properties">Web part properties to analyze</param>
            <returns>Type of the web part as fully qualified name</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Pages.BasePage.Properties(System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.String)">
            <summary>
            Checks the PageTransformation XML data to know which properties need to be kept for the given web part and collects their values
            </summary>
            <param name="properties">Properties collection retrieved when we loaded the web part</param>
            <param name="webPartType">Type of the web part</param>
            <param name="webPartXml">Web part XML</param>
            <returns>Collection of the requested property/value pairs</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Pages.BasePage.ExtractWebPartDocumentViaWebServicesFromPage(System.String)">
            <summary>
            Call SharePoint Web Services to extract web part properties not exposed by CSOM
            </summary>
            <returns></returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Pages.BasePage.ExportWebPartXmlWorkaround(System.String,System.String)">
            <summary>
            Exports Web Part XML via an older workround
            </summary>
            <param name="pageUrl"></param>
            <param name="webPartGuid"></param>
            <returns></returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Pages.BasePage.LoadPublishingPageFromWebServices(System.String)">
            <summary>
            Loads and Parses Web Part Page from Web Services
            </summary>
            <param name="fullUrl"></param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Pages.BasePage.ExtractWebPartPrefixesFromNamespaces(AngleSharp.Dom.Html.IHtmlDocument)">
            <summary>
            Gets the tag prefixes from the document
            </summary>
            <param name="webPartPage"></param>
            <returns></returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Pages.BasePage.LoadWebPartPropertiesFromWebServices(System.String)">
            <summary>
            Loads Web Part Properties from web services
            </summary>
            <param name="pageUrl">Server Relative Page Url</param>
            <returns></returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Pages.BasePage.ExtractWebPartPropertiesViaWebServicesFromPage(System.String)">
            <summary>
            Call SharePoint Web Services to extract web part properties not exposed by CSOM
            </summary>
            <returns></returns>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Pages.PageLayout">
            <summary>
            Possible layouts used by wiki or webpart pages
            </summary>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Pages.PublishingPage">
            <summary>
            Analyzes a publishing page
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Pages.PublishingPage.#ctor(Microsoft.SharePoint.Client.ListItem,SharePointPnP.Modernization.Framework.PageTransformation,SharePointPnP.Modernization.Framework.Transform.BaseTransformationInformation,System.Collections.Generic.IList{SharePointPnP.Modernization.Framework.Telemetry.ILogObserver})">
            <summary>
            Instantiates a publishing page object
            </summary>
            <param name="page">ListItem holding the page to analyze</param>
            <param name="pageTransformation">Page transformation information</param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Pages.PublishingPage.#ctor(Microsoft.SharePoint.Client.ListItem,SharePointPnP.Modernization.Framework.PageTransformation,SharePointPnP.Modernization.Framework.Publishing.PublishingPageTransformation,SharePointPnP.Modernization.Framework.Transform.BaseTransformationInformation,Microsoft.SharePoint.Client.ClientContext,System.Collections.Generic.IList{SharePointPnP.Modernization.Framework.Telemetry.ILogObserver})">
            <summary>
            Instantiates a publishing page object
            </summary>
            <param name="page">ListItem holding the page to analyze</param>
            <param name="pageTransformation">Page transformation information</param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Pages.PublishingPage.Analyze(SharePointPnP.Modernization.Framework.Publishing.PageLayout)">
            <summary>
            Analyses a publishing page
            </summary>
            <returns>Information about the analyzed publishing page</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Pages.PublishingPage.GetWebPartsForScanner">
            <summary>
            Analyses a publishing page for scanner usage
            </summary>
            <returns>Information about the analyzed publishing page</returns>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Pages.WebPartPage">
            <summary>
            Analyzes a web part page
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Pages.WebPartPage.#ctor(Microsoft.SharePoint.Client.ListItem,Microsoft.SharePoint.Client.File,SharePointPnP.Modernization.Framework.PageTransformation)">
            <summary>
            Instantiates a web part page object
            </summary>
            <param name="page">ListItem holding the page to analyze</param>
            <param name="pageFile">File holding the page (for pages living outside of a library)</param>
            <param name="pageTransformation">Page transformation information</param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Pages.WebPartPage.Analyze(System.Boolean)">
            <summary>
            Analyses a webpart page
            </summary>
            <param name="includeTitleBarWebPart">Include the TitleBar web part</param>
            <returns>Information about the analyzed webpart page</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Pages.WebPartPage.GetColumn(System.String,SharePointPnP.Modernization.Framework.Pages.PageLayout)">
            <summary>
            Translates the given zone value and page layout to a column number
            </summary>
            <param name="zoneId">Web part zone id</param>
            <param name="layout">Layout of the web part page</param>
            <returns>Column value</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Pages.WebPartPage.GetRow(System.String,SharePointPnP.Modernization.Framework.Pages.PageLayout)">
            <summary>
            Translates the given zone value and page layout to a row number
            </summary>
            <param name="zoneId">Web part zone id</param>
            <param name="layout">Layout of the web part page</param>
            <returns>Row value</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Pages.WebPartPage.GetLayout(Microsoft.SharePoint.Client.PropertyValues)">
            <summary>
            Determines the used web part page layout
            </summary>
            <param name="pageProperties">Properties of the web part page file</param>
            <returns>Used layout</returns>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Pages.WikiPage">
            <summary>
            Analyzes a wiki page
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Pages.WikiPage.#ctor(Microsoft.SharePoint.Client.ListItem,SharePointPnP.Modernization.Framework.PageTransformation)">
            <summary>
            Instantiates a wiki page object
            </summary>
            <param name="page">ListItem holding the page to analyze</param>
            <param name="pageTransformation">Page transformation information</param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Pages.WikiPage.Analyze(System.Boolean)">
            <summary>
            Analyses a wiki page
            </summary>
            <returns>Information about the analyzed wiki page</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Pages.WikiPage.IsNestedLayoutsZoneOuter(AngleSharp.Dom.IElement)">
            <summary>
            Check if this element is nested in another already processed element...this needs to be skipped to avoid content duplication and possible processing errors
            </summary>
            <param name="contentHost">element to check</param>
            <returns>true if embedded in a already processed element</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Pages.WikiPage.GetLayout(AngleSharp.Dom.Html.IHtmlDocument)">
            <summary>
            Analyzes the wiki page to determine which layout was used
            </summary>
            <param name="doc">html object</param>
            <returns>Layout of the wiki page</returns>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Publishing.Layouts.PageLayoutHeaderFieldEntity">
            <summary>
            Class for holding data properties for the fields that will be used in the page header
            </summary>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Publishing.Layouts.PageLayoutMetadataEntity">
            <summary>
            Class that will be used to hold the fields that will be used the field to metadata mapping
            </summary>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Publishing.Layouts.PageLayoutWebPartFieldEntity">
            <summary>
            Class for holding data properties for field to web part mapping
            </summary>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Publishing.Layouts.PublishingDefaults">
            <summary>
            Contains a central point for defaults for publishing page processing
            </summary>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Publishing.Layouts.PublishingDefaults.WebPartFieldProperties">
            <summary>
            Field Control Defaults for mappings
            </summary>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Publishing.Layouts.PublishingDefaults.MetaDataFieldToTargetMappings">
            <summary>
            Metadata field default mappings
            </summary>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Publishing.Layouts.PublishingDefaults.PageLayoutHeaderMetadata">
            <summary>
            Field to header mappings
            </summary>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Publishing.Layouts.PublishingDefaults.IgnoreMetadataFields">
            <summary>
            List of metadata fields in content types to ignore in mappings
            </summary>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Publishing.Layouts.PublishingDefaults.IgnoreWebPartFieldControls">
            <summary>
            List of field controls in page to ignore in mappings
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Publishing.PublishingBuiltIn.#ctor(SharePointPnP.Modernization.Framework.Transform.BaseTransformationInformation,Microsoft.SharePoint.Client.ClientContext,Microsoft.SharePoint.Client.ClientContext,System.Collections.Generic.IList{SharePointPnP.Modernization.Framework.Telemetry.ILogObserver})">
            <summary>
            Instantiates the base builtin function library
            </summary>
            <param name="pageClientContext">ClientContext object for the site holding the page being transformed</param>
            <param name="sourceClientContext">The ClientContext for the source </param>
            <param name="clientSidePage">Reference to the client side page</param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Publishing.PublishingBuiltIn.EmptyString">
            <summary>
            Returns an empty string
            </summary>
            <returns>Empty string</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Publishing.PublishingBuiltIn.StaticString(System.String)">
            <summary>
            Returns an the (static) string provided as input
            </summary>
            <param name="staticString">Static string that will be returned</param>
            <returns>String provided as input</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Publishing.PublishingBuiltIn.ToImageUrl(System.String)">
            <summary>
            Returns the server relative image url of a Publishing Image field value
            </summary>
            <param name="htmlImage">Publishing Image field value</param>
            <returns>Server relative image url</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Publishing.PublishingBuiltIn.ToImageAltText(System.String)">
            <summary>
            Returns the image alternate text of a Publishing Image field value.
            </summary>
            <param name="htmlImage">PublishingPageImage</param>
            <returns>Image alternate text</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Publishing.PublishingBuiltIn.ToImageAnchor(System.String)">
            <summary>
            Returns the image anchor url of a Publishing Image field value
            </summary>
            <param name="htmlImage">Publishing Image field value</param>
            <returns>Image anchor url</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Publishing.PublishingBuiltIn.ToImageCaption(System.String)">
            <summary>
            Returns the image caption of a Publishing Html image caption field
            </summary>
            <param name="htmlField">Publishing Html image caption field value</param>
            <returns>Image caption</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Publishing.PublishingBuiltIn.ToPreviewImageUrl(System.String)">
            <summary>
            Returns a page preview image url
            </summary>
            <param name="image">A publishing image field value or a string containing a server relative image path</param>
            <returns>A formatted preview image url</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Publishing.PublishingBuiltIn.ToAuthors(System.String)">
            <summary>
            Looks up user information for passed user id
            </summary>
            <param name="userId">The id (int) of a user</param>
            <returns>A formatted json blob describing the user's details</returns>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Publishing.PublishingFunctionProcessor">
            <summary>
            Function processor for publishing page transformation
            </summary>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Publishing.PublishingFunctionProcessor.FieldType">
            <summary>
            Field types
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.PublishingFunctionProcessor.NameAttributeToken">
            <summary>
            Name token
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Publishing.PublishingFunctionProcessor.#ctor(Microsoft.SharePoint.Client.ListItem,Microsoft.SharePoint.Client.ClientContext,Microsoft.SharePoint.Client.ClientContext,SharePointPnP.Modernization.Framework.Publishing.PublishingPageTransformation,SharePointPnP.Modernization.Framework.Transform.BaseTransformationInformation,System.Collections.Generic.IList{SharePointPnP.Modernization.Framework.Telemetry.ILogObserver})">
            <summary>
            Default constructor
            </summary>
            <param name="page">Page to operate on</param>
            <param name="sourceClientContext">Clientcontext of the source site</param>
            <param name="targetClientContext">Clientcontext of the target site</param>
            <param name="publishingPageTransformation">Publishing page layout mapping</param>
            <param name="baseTransformationInformation">Page transformation information</param>
            <param name="logObservers">Connected loggers</param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Publishing.PublishingFunctionProcessor.ResolveFunctionToken(System.String,System.String)">
            <summary>
            Replaces instances of the NameAttributeToken with the provided PropertyName
            </summary>
            <param name="functions">A string value containing the function definition</param>
            <param name="propertyName">The property to replace it with</param>
            <returns>The newly formatted function value.</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Publishing.PublishingFunctionProcessor.Process(System.String,System.String,SharePointPnP.Modernization.Framework.Publishing.PublishingFunctionProcessor.FieldType)">
            <summary>
            Executes a function and returns results
            </summary>
            <param name="functions">Function to process</param>
            <param name="propertyName">Field/property the function runs on</param>
            <param name="propertyType">Type of the field/property the function will run on</param>
            <returns>Function output</returns>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Publishing.PublishingLayoutTransformator">
            <summary>
            Specific layout transformator for the 'AutoDetect' layout option for publishing pages
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Publishing.PublishingLayoutTransformator.#ctor(OfficeDevPnP.Core.Pages.ClientSidePage,SharePointPnP.Modernization.Framework.Publishing.PageLayout,System.Collections.Generic.IList{SharePointPnP.Modernization.Framework.Telemetry.ILogObserver})">
            <summary>
            Creates a layout transformator instance
            </summary>
            <param name="page">Client side page that will be receive the created layout</param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Publishing.PublishingLayoutTransformator.Transform(System.Tuple{SharePointPnP.Modernization.Framework.Pages.PageLayout,System.Collections.Generic.List{SharePointPnP.Modernization.Framework.Entities.WebPartEntity}})">
            <summary>
            Builds the layout (sections) of the modern page
            </summary>
            <param name="pageData">Information about the source page</param>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Publishing.PublishingMetadataTransformator">
            <summary>
            Class responsible for handling the metadata copying of publishing pages
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Publishing.PublishingMetadataTransformator.Transform">
            <summary>
            Process the metadata copying (as defined in the used page layout mapping)
            </summary>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Publishing.PublishingPageHeaderTransformator">
            <summary>
            Class that will handle the configuration of the modern page header when transforming publishing pages
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Publishing.PublishingPageHeaderTransformator.TransformHeader(OfficeDevPnP.Core.Pages.ClientSidePage@)">
            <summary>
            Builds the header for the modern page
            </summary>
            <param name="targetPage">Modern page instance</param>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Publishing.PublishingPageTransformationInformation">
            <summary>
            Information used to configure the publishing page transformation process
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Publishing.PublishingPageTransformationInformation.#ctor">
            <summary>
            For internal use only
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Publishing.PublishingPageTransformationInformation.#ctor(Microsoft.SharePoint.Client.ListItem)">
            <summary>
            Instantiates the page transformation class
            </summary>
            <param name="sourcePage">Page we want to transform</param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Publishing.PublishingPageTransformationInformation.#ctor(Microsoft.SharePoint.Client.ListItem,System.Boolean)">
            <summary>
            Instantiates the page transformation class
            </summary>
            <param name="sourcePage">Page we want to transform</param>
            <param name="overwrite">Do we overwrite the target page if it already exists</param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Publishing.PublishingPageTransformationInformation.GetFirstNonEmptyFieldName(System.String[])">
            <summary>
            Given a collection of field names will return the first one which contains a value which is not null or empty.
            </summary>
            <param name="fieldNames">A array of Internal field names to check</param>
            <returns>An Internal field name</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Publishing.PublishingPageTransformationInformation.IsFieldUsed(System.String)">
            <summary>
            Checks if a field is in use
            </summary>
            <param name="fieldName">Internal field name</param>
            <returns>True or False</returns>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Publishing.PublishingPageTransformator">
            <summary>
            Transforms a classic publishing page into a modern client side page
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Publishing.PublishingPageTransformator.Transform(SharePointPnP.Modernization.Framework.Publishing.PublishingPageTransformationInformation)">
            <summary>
            Transform the publishing page
            </summary>
            <param name="publishingPageTransformationInformation">Information about the publishing page to transform</param>
            <returns>The path to the created modern page</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Publishing.PublishingPageTransformator.DetailSettingsAsLogEntries(SharePointPnP.Modernization.Framework.Publishing.PublishingPageTransformationInformation)">
            <summary>
            Use reflection to read the object properties and detail the values
            </summary>
            <param name="pti">PageTransformationInformation object</param>
            <returns></returns>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Publishing.PageLayoutAnalyser.ExtractedHtmlBlocksEntity">
            <summary>
            Simple entity for the extracted blocks of data
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Publishing.PageLayoutAnalyser.#ctor(Microsoft.SharePoint.Client.ClientContext,System.Collections.Generic.IList{SharePointPnP.Modernization.Framework.Telemetry.ILogObserver})">
            <summary>
            Analyse Page Layouts class constructor
            </summary>
            <param name="sourceContext">This should be the context of the source web</param>
            <param name="logObservers">List of log observers</param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Publishing.PageLayoutAnalyser.AnalyseAll(System.Boolean)">
            <summary>
            Main entry point into the class to analyse the page layouts
            </summary>
            <param name="skipOOBPageLayouts">Skip OOB page layouts</param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Publishing.PageLayoutAnalyser.AnalysePageLayout(Microsoft.SharePoint.Client.ListItem)">
            <summary>
            Analyses a single page layout from a provided file
            </summary>
            <param name="pageLayoutItem">Page layout list item</param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Publishing.PageLayoutAnalyser.AnalysePageLayoutFromPublishingPage(Microsoft.SharePoint.Client.ListItem)">
            <summary>
            Determine the page layout from a publishing page
            </summary>
            <param name="publishingPage">Publishing page to analyze the page layout for</param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Publishing.PageLayoutAnalyser.GenerateMappingFile">
            <summary>
            Generate the mapping file to output from the analysis
            </summary>
            <returns>Mapping file fully qualified path</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Publishing.PageLayoutAnalyser.GenerateMappingFile(System.String)">
            <summary>
            Generate the mapping file to output from the analysis
            </summary>
            <param name="folder">Folder to generate the file in</param>
            <returns>Mapping file fully qualified path</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Publishing.PageLayoutAnalyser.GenerateMappingFile(System.String,System.String)">
            <summary>
            Generate the mapping file to output from the analysis
            </summary>
            <param name="folder">Folder to generate the file in</param>
            <param name="fileName">name of the mapping file</param>
            <returns>Mapping file fully qualified path</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Publishing.PageLayoutAnalyser.GetAllPageLayouts">
            <summary>
            Determines the page layouts in the current web
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Publishing.PageLayoutAnalyser.ExtractMetaDataFromPageLayoutAssociatedContentType(Microsoft.SharePoint.Client.FieldCollection,System.Collections.Generic.List{SharePointPnP.Modernization.Framework.Publishing.WebPartField},SharePointPnP.Modernization.Framework.Publishing.Header)">
            <summary>
            Get Metadata mapping from the page layout associated content type
            </summary>
            <param name="contentTypeId">Id of the content type</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:SharePointPnP.Modernization.Framework.Publishing.PageLayoutAnalyser.ExtractWebPartPrefixesFromNamespaces(Microsoft.SharePoint.Client.ListItem)" -->
        <member name="M:SharePointPnP.Modernization.Framework.Publishing.PageLayoutAnalyser.ExtractControlsFromPageLayoutHtml(Microsoft.SharePoint.Client.ListItem)">
            <summary>
            Extract the web parts from the page layout HTML outside of web part zones
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Publishing.PageLayoutAnalyser.EncodingAndCleanUpContent(System.String)">
            <summary>
            Cleans and encodes content data
            </summary>
            <param name="content">web part value</param>
            <returns></returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Publishing.PageLayoutAnalyser.LoadContentTypeFields(System.String)">
            <summary>
            Loads the content type fields
            </summary>
            <param name="contentTypeId"></param>
            <returns></returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Publishing.PageLayoutAnalyser.CleanExtractedWebPartFields(System.Collections.Generic.List{SharePointPnP.Modernization.Framework.Publishing.WebPartField},Microsoft.SharePoint.Client.FieldCollection)">
            <summary>
            Perform cleanup of web part fields
            </summary>
            <param name="webPartFields">List of extracted web parts</param>
            <param name="spFields">Collection of fields</param>
            <returns></returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Publishing.PageLayoutAnalyser.ExtractPageHeaderFromPageLayoutAssociatedContentType(Microsoft.SharePoint.Client.FieldCollection)">
            <summary>
            Sets the page layout header field defaults
            </summary>
            <param name="oobPageLayoutDefaults"></param>
            <param name="layoutMapping"></param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Publishing.PageLayoutAnalyser.EnsureSiteCollectionContext(Microsoft.SharePoint.Client.ClientContext)">
            <summary>
            Ensures that we have context of the source site collection
            </summary>
            <param name="context">Connection to SharePoint</param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Publishing.PageLayoutAnalyser.CastToEnum``1(System.String)">
            <summary>
            Cast a string to enum value
            </summary>
            <typeparam name="T">Enum Type</typeparam>
            <param name="enumString">string value</param>
            <returns></returns>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Publishing.PageLayoutManager">
            <summary>
            Class used to manage SharePoint Publishing page layouts
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Publishing.PageLayoutManager.#ctor(System.Collections.Generic.IList{SharePointPnP.Modernization.Framework.Telemetry.ILogObserver})">
            <summary>
            Constructs the page layout manager class
            </summary>
            <param name="logObservers">Currently in use log observers</param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Publishing.PageLayoutManager.LoadPageLayoutMappingFile(System.String)">
            <summary>
            Loads a page layout mapping file
            </summary>
            <param name="pageLayoutMappingFile">Path and name of the page mapping file</param>
            <returns>A <see cref="T:SharePointPnP.Modernization.Framework.Publishing.PublishingPageTransformation"/> instance.</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Publishing.PageLayoutManager.LoadDefaultPageLayoutMappingFile">
            <summary>
            Load the default page layout mapping file
            </summary>
            <returns>A <see cref="T:SharePointPnP.Modernization.Framework.Publishing.PublishingPageTransformation"/> instance.</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Publishing.PageLayoutManager.GetPageLayoutMappingModel(SharePointPnP.Modernization.Framework.Publishing.PublishingPageTransformation,Microsoft.SharePoint.Client.ListItem)">
            <summary>
            Load to PageLayout that will be used to transform the given page
            </summary>
            <param name="publishingPageTransformation">Publishing page transformation data to get the correct page layout mapping from</param>
            <param name="page">Page for which we're looking for a mapping</param>
            <returns>The page layout mapping that will be used for the passed page</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Publishing.PageLayoutManager.GenerateStreamFromString(System.String)">
            <summary>
            Transforms a string into a stream
            </summary>
            <param name="s">String to transform</param>
            <returns>Stream</returns>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Publishing.PublishingPageTransformation">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.PublishingPageTransformation.AddOns">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.PublishingPageTransformation.PageLayouts">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.PublishingPageTransformation.Version">
            <remarks/>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Publishing.AddOn">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.AddOn.Name">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.AddOn.Type">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.AddOn.Assembly">
            <remarks/>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Publishing.FixedWebPartProperty">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.FixedWebPartProperty.Name">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.FixedWebPartProperty.Type">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.FixedWebPartProperty.Value">
            <remarks/>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Publishing.WebPartProperyType">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Publishing.WebPartProperyType.string">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Publishing.WebPartProperyType.bool">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Publishing.WebPartProperyType.guid">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Publishing.WebPartProperyType.integer">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Publishing.WebPartProperyType.datetime">
            <remarks/>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Publishing.FixedWebPart">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.FixedWebPart.Property">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.FixedWebPart.Type">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.FixedWebPart.Row">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.FixedWebPart.Column">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.FixedWebPart.Order">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.FixedWebPart.OrderSpecified">
            <remarks/>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Publishing.WebPartOccurrence">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.WebPartOccurrence.Type">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.WebPartOccurrence.Row">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.WebPartOccurrence.Column">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.WebPartOccurrence.Order">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.WebPartOccurrence.OrderSpecified">
            <remarks/>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Publishing.WebPartZone">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.WebPartZone.WebPartZoneLayout">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.WebPartZone.ZoneIndex">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.WebPartZone.ZoneId">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.WebPartZone.Row">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.WebPartZone.Column">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.WebPartZone.Order">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.WebPartZone.OrderSpecified">
            <remarks/>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Publishing.WebPartProperty">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.WebPartProperty.Name">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.WebPartProperty.Type">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.WebPartProperty.Functions">
            <remarks/>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Publishing.WebPartField">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.WebPartField.Property">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.WebPartField.Name">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.WebPartField.TargetWebPart">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.WebPartField.FieldId">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.WebPartField.Row">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.WebPartField.Column">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.WebPartField.Order">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.WebPartField.OrderSpecified">
            <remarks/>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Publishing.MetaDataField">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.MetaDataField.Name">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.MetaDataField.TargetFieldName">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.MetaDataField.Functions">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.MetaDataField.ShowInPageProperties">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.MetaDataField.ShowInPagePropertiesSpecified">
            <remarks/>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Publishing.MetaData">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.MetaData.Field">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.MetaData.ShowPageProperties">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.MetaData.ShowPagePropertiesSpecified">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.MetaData.PagePropertiesRow">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.MetaData.PagePropertiesRowSpecified">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.MetaData.PagePropertiesColumn">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.MetaData.PagePropertiesColumnSpecified">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.MetaData.PagePropertiesOrder">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.MetaData.PagePropertiesOrderSpecified">
            <remarks/>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Publishing.HeaderField">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.HeaderField.Name">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.HeaderField.HeaderProperty">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.HeaderField.Functions">
            <remarks/>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Publishing.HeaderFieldHeaderProperty">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Publishing.HeaderFieldHeaderProperty.ImageServerRelativeUrl">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Publishing.HeaderFieldHeaderProperty.TopicHeader">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Publishing.HeaderFieldHeaderProperty.AlternativeText">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Publishing.HeaderFieldHeaderProperty.Authors">
            <remarks/>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Publishing.Header">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.Header.Field">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.Header.Type">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.Header.Alignment">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.Header.ShowPublishedDate">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.Header.ShowPublishedDateSpecified">
            <remarks/>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Publishing.HeaderType">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Publishing.HeaderType.FullWidthImage">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Publishing.HeaderType.NoImage">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Publishing.HeaderType.ColorBlock">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Publishing.HeaderType.CutInShape">
            <remarks/>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Publishing.HeaderAlignment">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Publishing.HeaderAlignment.Left">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Publishing.HeaderAlignment.Center">
            <remarks/>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Publishing.Section">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.Section.Row">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.Section.Emphasis">
            <remarks/>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Publishing.BackgroundEmphasis">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Publishing.BackgroundEmphasis.None">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Publishing.BackgroundEmphasis.Neutral">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Publishing.BackgroundEmphasis.Soft">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Publishing.BackgroundEmphasis.Strong">
            <remarks/>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Publishing.SectionEmphasis">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.SectionEmphasis.Section">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.SectionEmphasis.VerticalColumnEmphasis">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.SectionEmphasis.VerticalColumnEmphasisSpecified">
            <remarks/>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Publishing.PageLayout">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.PageLayout.SectionEmphasis">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.PageLayout.Header">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.PageLayout.MetaData">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.PageLayout.WebParts">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.PageLayout.WebPartZones">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.PageLayout.FixedWebParts">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.PageLayout.Name">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.PageLayout.AlsoAppliesTo">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.PageLayout.AssociatedContentType">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.PageLayout.PageLayoutTemplate">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.PageLayout.IncludeVerticalColumn">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.PageLayout.IncludeVerticalColumnSpecified">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Publishing.PageLayout.PageHeader">
            <remarks/>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Publishing.PageLayoutPageLayoutTemplate">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Publishing.PageLayoutPageLayoutTemplate.OneColumn">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Publishing.PageLayoutPageLayoutTemplate.TwoColumns">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Publishing.PageLayoutPageLayoutTemplate.TwoColumnsWithSidebarLeft">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Publishing.PageLayoutPageLayoutTemplate.TwoColumnsWithSidebarRight">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Publishing.PageLayoutPageLayoutTemplate.TwoColumnsWithHeader">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Publishing.PageLayoutPageLayoutTemplate.TwoColumnsWithHeaderAndFooter">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Publishing.PageLayoutPageLayoutTemplate.ThreeColumns">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Publishing.PageLayoutPageLayoutTemplate.ThreeColumnsWithHeader">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Publishing.PageLayoutPageLayoutTemplate.ThreeColumnsWithHeaderAndFooter">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Publishing.PageLayoutPageLayoutTemplate.AutoDetect">
            <remarks/>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Publishing.PageLayoutPageHeader">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Publishing.PageLayoutPageHeader.None">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Publishing.PageLayoutPageHeader.Default">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Publishing.PageLayoutPageHeader.Custom">
            <remarks/>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Functions.BaseFunctionProcessor">
            <summary>
            Base class for function processors
            </summary>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Functions.BaseFunctionProcessor.FunctionType">
            <summary>
            Allowed function parameter types
            </summary>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Functions.BaseFunctionProcessor.FunctionParameter">
            <summary>
            Definition of a function parameter
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Functions.BaseFunctionProcessor.FunctionParameter.Name">
            <summary>
            Name of the parameter
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Functions.BaseFunctionProcessor.FunctionParameter.Type">
            <summary>
            Type if the parameter
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Functions.BaseFunctionProcessor.FunctionParameter.Value">
            <summary>
            Value of the parameter
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Functions.BaseFunctionProcessor.FunctionParameter.IsStatic">
            <summary>
            Is this a static, hard coded, value. Eg 'my hardcoded string'
            </summary>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Functions.BaseFunctionProcessor.FunctionDefinition">
            <summary>
            Definition of a function or selector
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Functions.BaseFunctionProcessor.FunctionDefinition.AddOn">
            <summary>
            AddOn hosting the function/selector. Empty value means the function is hosted by the internal builtin functions library
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Functions.BaseFunctionProcessor.FunctionDefinition.Name">
            <summary>
            Name of the function/selector
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Functions.BaseFunctionProcessor.FunctionDefinition.Output">
            <summary>
            Parameter specifying the function result
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Functions.BaseFunctionProcessor.FunctionDefinition.Input">
            <summary>
            List of input parameter used to call the function
            </summary>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Functions.BaseFunctionProcessor.AddOnType">
            <summary>
            Defines a loaded AddOn function/selector class instance
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Functions.BaseFunctionProcessor.AddOnType.Name">
            <summary>
            Name of the addon. The name is used to link the determine which class instance needs to be used to execute a function
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Functions.BaseFunctionProcessor.AddOnType.Instance">
            <summary>
            Instance of the class that holds the functions/selectors
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Functions.BaseFunctionProcessor.AddOnType.Assembly">
            <summary>
            Assembly holding the functions/selector class
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Functions.BaseFunctionProcessor.AddOnType.Type">
            <summary>
            Type of the functions/selector class
            </summary>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Functions.NotAvailableAtTargetException">
            <summary>
            Exception class thrown when a SharePoint object (e.g. list) is not available at the target site
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Functions.NotAvailableAtTargetException.#ctor(System.String)">
            <summary>
            Throws a NotAvailableAtTargetException message
            </summary>
            <param name="message">Error message</param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Functions.NotAvailableAtTargetException.#ctor(System.String,System.Exception)">
            <summary>
            Throws a NotAvailableAtTargetException message
            </summary>
            <param name="message">Error message</param>
            <param name="innerException">Inner exception object</param>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Functions.BuiltIn">
            <summary>
            Set of native, builtin, functions
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Functions.BuiltIn.#ctor(SharePointPnP.Modernization.Framework.Transform.BaseTransformationInformation,Microsoft.SharePoint.Client.ClientContext,Microsoft.SharePoint.Client.ClientContext,OfficeDevPnP.Core.Pages.ClientSidePage,System.Collections.Generic.IList{SharePointPnP.Modernization.Framework.Telemetry.ILogObserver})">
            <summary>
            Instantiates the base builtin function library
            </summary>
            <param name="pageClientContext">ClientContext object for the site holding the page being transformed</param>
            <param name="sourceClientContext">The ClientContext for the source </param>
            <param name="clientSidePage">Reference to the client side page</param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Functions.BuiltIn.HtmlEncode(System.String)">
            <summary>
            Html encodes a string
            </summary>
            <param name="text">Text to html encode</param>
            <returns>Html encoded string</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Functions.BuiltIn.HtmlEncodeForJson(System.String)">
            <summary>
            Html encodes string for inclusion in JSON
            </summary>
            <param name="text">Text to html encode</param>
            <returns>Html encoded string for inclusion in JSON</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Functions.BuiltIn.ReturnTrue">
            <summary>
            Return true
            </summary>
            <returns>True</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Functions.BuiltIn.ReturnFalse">
            <summary>
            Return false
            </summary>
            <returns>False</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Functions.BuiltIn.ReturnServerRelativePath(System.String)">
            <summary>
            Transforms the incoming path into a server relative path
            </summary>
            <param name="path">Path to transform</param>
            <returns>Server relative path</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Functions.BuiltIn.ReturnFileName(System.String)">
            <summary>
            Returns the filename of the given path
            </summary>
            <param name="path"></param>
            <returns>File name</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Functions.BuiltIn.StaticString(System.String)">
            <summary>
            Returns an the (static) string provided as input
            </summary>
            <returns>String provided as input</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Functions.BuiltIn.TextSelector(System.String)">
            <summary>
            Selector to allow to embed a spacer instead of an empty text
            </summary>
            <param name="text">Text to evaluate</param>
            <returns>Text if text needs to be inserted, Spacer if text was empty and you want a spacer</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Functions.BuiltIn.TextCleanup(System.String,System.String)">
            <summary>
            Wiki html rewrite to work in RTE
            </summary>
            <param name="text">Wiki html to rewrite</param>
            <returns>Html that's compatible with RTE</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Functions.BuiltIn.ContainsScript(System.String)">
            <summary>
            Checks if the provided html contains JavaScript
            </summary>
            <param name="content">Html content to check</param>
            <returns>True is the html contains script, false otherwise</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Functions.BuiltIn.ListSelectorListLibrary(System.Guid,System.String)">
            <summary>
            Selector that returns the base type of the list as input for selecting the correct mapping
            </summary>
            <param name="listId">Id of the list</param>
            <returns>Mapping to be used for the given list</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Functions.BuiltIn.ListCrossSiteCheck(System.Guid)">
            <summary>
            Returns the cross site collection save list id.
            </summary>
            <param name="listId">Id of the list</param>
            <returns>Cross site collection safe list id</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Functions.BuiltIn.ListAddServerRelativeUrl(System.Guid)">
            <summary>
            Function that returns the server relative url of the given list
            </summary>
            <param name="listId">Id of the list</param>
            <returns>Server relative url of the list</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Functions.BuiltIn.ListAddWebRelativeUrl(System.Guid)">
            <summary>
            Function that returns the web relative url of the given list
            </summary>
            <param name="listId">Id of the list</param>
            <returns>Web relative url of the list</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Functions.BuiltIn.ListHideToolBar(System.String)">
            <summary>
            Checks if an XSLTListView web part has a hidden toolbar
            </summary>
            <param name="xmlDefinition">XmlDefinition attribute of the XSLTListViewWebPart</param>
            <returns>Boolean indicating if the toolbar should be hidden</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Functions.BuiltIn.ListDetectUsedView(System.Guid,System.String)">
            <summary>
            Tries to find the id of the view used to configure the web part
            </summary>
            <param name="listId">Id of the list</param>
            <param name="xmlDefinition">Webpart view definition</param>
            <returns>Id of the detected view if found or otherwise the id of the default list view</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Functions.BuiltIn.ImageLookup(System.String)">
            <summary>
            Does return image properties based on given server relative image path
            </summary>
            <param name="serverRelativeImagePath">Server relative path of the image</param>
            <returns>A set of image properties</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Functions.BuiltIn.ReturnCrossSiteRelativePath(System.String)">
            <summary>
            Copy the asset to target site in cross site transformation
            </summary>
            <param name="imageLink"></param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Functions.BuiltIn.ImageAnchorUrlRewrite(System.String,System.String,System.String)">
            <summary>
            Rewrite the image anchor tag url
            </summary>
            <param name="anchor">Original anchor tag fetched from the source image</param>
            <param name="originalImageUrl">Original image url</param>
            <param name="newImageUrl">New image url</param>
            <returns>The url after url rewrite. If the anchor and original image url were the same then the anchor will be set to the new image url</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Functions.BuiltIn.ExtractWebpartProperties(System.String)">
            <summary>
            Extracts the client side web part properties so they can be reused
            </summary>
            <param name="clientSideWebPartHtml">Html defining the client side web part hosted on a classic page</param>
            <returns>Client side web part properties ready for reuse</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Functions.BuiltIn.ContentEmbedCrossSiteCheck(System.String)">
            <summary>
            Throws an exception when link to .aspx file.
            </summary>
            <param name="listId">Link value if set</param>
            <returns>Unused variable</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Functions.BuiltIn.LoadContentFromFile(System.String)">
            <summary>
            Loads contents of a file as a string.
            </summary>
            <param name="contentLink">Server relative url to the file to load</param>
            <returns>Text content of the file. Return empty string if file was not found</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Functions.BuiltIn.UserDocumentsToHighlightedContentProperties">
            <summary>
            Maps the user documents web part data into a properties collection and supporting serverProcessedContent nodes for the content rollup (= Highlighted Content) web part
            </summary>
            <param name="dataProviderJson"></param>
            <param name="selectedPropertiesJson"></param>
            <param name="resultsPerPage"></param>
            <param name="renderTemplateId"></param>
            <returns>A properties collection and supporting serverProcessedContent nodes for the content rollup (= Highlighted Content) web part</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Functions.BuiltIn.ContentBySearchToHighlightedContentProperties(System.String,System.String,System.Int32,System.String)">
            <summary>
            Maps content by search web part data into a properties collection and supporting serverProcessedContent nodes for the content rollup (= Highlighted Content) web part
            </summary>
            <param name="dataProviderJson"></param>
            <param name="selectedPropertiesJson"></param>
            <param name="resultsPerPage"></param>
            <param name="renderTemplateId"></param>
            <returns>A properties collection and supporting serverProcessedContent nodes for the content rollup (= Highlighted Content) web part</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Functions.BuiltIn.ContentByQueryToHighlightedContentProperties(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String)">
            <summary>
            Maps content by query web part data into a properties collection for the contentrollup (= Highlighted Content) web part
            </summary>
            <param name="webUrl"></param>
            <param name="listGuid"></param>
            <param name="listName"></param>
            <param name="serverTemplate"></param>
            <param name="contentTypeBeginsWithId"></param>
            <param name="filterField1"></param>
            <param name="filter1ChainingOperator"></param>
            <param name="filterField1Value"></param>
            <param name="filterOperator1"></param>
            <param name="filterField2"></param>
            <param name="filter2ChainingOperator"></param>
            <param name="filterField2Value"></param>
            <param name="filterOperator2"></param>
            <param name="filterField3"></param>
            <param name="filterField3Value"></param>
            <param name="filterOperator3"></param>
            <param name="sortBy"></param>
            <param name="sortByDirection"></param>
            <param name="groupBy"></param>
            <param name="groupByDirection"></param>
            <param name="itemLimit"></param>
            <param name="displayColumns"></param>
            <param name="dataMappings"></param>
            <returns>A properties collection and supporting serverProcessedContent nodes for the content rollup (= Highlighted Content) web part</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Functions.BuiltIn.SummaryLinkSelector(System.String)">
            <summary>
            Uses the SummaryLinksToQuickLinks mapping property provided via the PageTransformationInformation instance to determine the mapping
            </summary>
            <param name="useQuickLinks">The SummaryLinksToQuickLinks mapping property provided via the PageTransformationInformation instance</param>
            <returns>Whether to transform via the QuickLinks web part or via Text</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Functions.BuiltIn.TextCleanUpSummaryLinks(System.String,System.Int32,System.String)">
            <summary>
            Rewrites summarylinks web part html to be compliant with the html supported by the client side text part
            </summary>
            <param name="text">Original wiki html content</param>
            <returns>Html compliant with client side text part</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Functions.BuiltIn.SummaryLinksToQuickLinksProperties(System.String,System.String)">
            <summary>
            Maps summarylinks web part data into a properties collection and supporting serverProcessedContent nodes for the quicklinks web part
            </summary>
            <param name="text">Original wiki html content</param>
            <returns>Properties collection for the quicklinks web part</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Functions.BuiltIn.ScriptEditorSelector(System.String)">
            <summary>
            Uses the UseCommunityScriptEditor mapping property provided via the PageTransformationInformation instance to determine the mapping
            </summary>
            <param name="useQuickLinks">The UseCommunityScriptEditor mapping property provided via the PageTransformationInformation instance</param>
            <returns>Whether to transform via the community script editor web part</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Functions.BuiltIn.UserExistsSelector(System.String)">
            <summary>
            Checks if the passed value is a user or not
            </summary>
            <param name="person">Account of the user</param>
            <returns>Indication if user is valid or not</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Functions.BuiltIn.LookupPerson(System.String)">
            <summary>
            Looks up a person from the UserInfo list and returns the needed details
            </summary>
            <param name="person">User account to lookup (in i:0#.f|membership|joe@contoso.onmicrosoft.com format)</param>
            <returns>Information about the found user</returns>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Functions.BaseFunctionDocumentationAttribute">
            <summary>
            Base attribute to document a function or selector
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Functions.BaseFunctionDocumentationAttribute.Description">
            <summary>
            Description of the function
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Functions.BaseFunctionDocumentationAttribute.Example">
            <summary>
            Function example
            </summary>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Functions.FunctionDocumentationAttribute">
            <summary>
            Function documentation attribute class
            </summary>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Functions.SelectorDocumentationAttribute">
            <summary>
            Selector documentation attribute class
            </summary>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Functions.ParameterDocumentationAttribute">
            <summary>
            Base parameter to document a function/selector parameter
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Functions.ParameterDocumentationAttribute.Name">
            <summary>
            Name of the parameter
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Functions.ParameterDocumentationAttribute.Description">
            <summary>
            Parameter description
            </summary>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Functions.InputDocumentationAttribute">
            <summary>
            Input parameter documentation attribute
            </summary>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Functions.OutputDocumentationAttribute">
            <summary>
            Output parameter documentation attribute
            </summary>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Functions.FunctionProcessor">
            <summary>
            Class that executes functions and selectors defined in the mapping 
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Functions.FunctionProcessor.#ctor(Microsoft.SharePoint.Client.ClientContext,OfficeDevPnP.Core.Pages.ClientSidePage,SharePointPnP.Modernization.Framework.PageTransformation,SharePointPnP.Modernization.Framework.Transform.BaseTransformationInformation,System.Collections.Generic.IList{SharePointPnP.Modernization.Framework.Telemetry.ILogObserver})">
            <summary>
            Instantiates the function processor. Also loads the defined add-ons
            </summary>
            <param name="page">Client side page for which we're executing the functions/selectors as part of the mapping</param>
            <param name="pageTransformation">Webpart mapping information</param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Functions.FunctionProcessor.Process(SharePointPnP.Modernization.Framework.WebPart@,SharePointPnP.Modernization.Framework.Entities.WebPartEntity)">
            <summary>
            Executes the defined functions and selectors in the provided web part
            </summary>
            <param name="webPartData">Web Part mapping data</param>
            <param name="webPart">Definition of the web part to be transformed</param>
            <returns>The ouput of the mapping selector if there was one executed, null otherwise</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Functions.FunctionProcessor.ProcessMappingFunctions(SharePointPnP.Modernization.Framework.WebPart@,SharePointPnP.Modernization.Framework.Entities.WebPartEntity,SharePointPnP.Modernization.Framework.Mapping)">
            <summary>
            Executes the defined functions and selectors in the provided web part
            </summary>
            <param name="webPartData">Web Part mapping data</param>
            <param name="webPart">Definition of the web part to be transformed</param>
            <returns>The ouput of the mapping selector if there was one executed, null otherwise</returns>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Functions.FunctionsBase">
            <summary>
            Base class for all function libraries
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Functions.FunctionsBase.#ctor(Microsoft.SharePoint.Client.ClientContext)">
            <summary>
            Instantiates a function library class
            </summary>
            <param name="clientContext">ClientContext object for the site holding the page being transformed</param>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Functions.XmlComparer">
            <summary>
            Loosely compares XML documents for equality:
            <list type="bullet">
            <item>Order of siblings in an element is ignored.</item>
            <item>Text nodes are the only node in at the bottom of the tree so sibling text nodes are merged for comparison.</item>
            <item>The prefix used for a namespace is ignored.</item>
            <item>Comments are ignored.</item>
            </list>
            This type of comparison is useful when comparing the XML documents used as messages, configuration, etc. in various specifications.
            </summary>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Functions.XmlEqualityResult">
            <summary>
            The result of an equiality comparison with <see cref="T:SharePointPnP.Modernization.Framework.Functions.XmlComparer"/>
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Functions.XmlEqualityResult.Success">
            <summary>
            Gets whether the match was successful
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Functions.XmlEqualityResult.FailObject">
            <summary>
            Gets or sets the object that failed the match
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Functions.XmlEqualityResult.ErrorMessage">
            <summary>
            Gets or sets a descriptive error message if the match failed.
            </summary>
            <remarks>
            If set to null or not set the default Error Message is returned.
            </remarks>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Telemetry.LogStrings">
            <summary>
            Class holding strings used in log messages
            </summary>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Telemetry.ILogObserver">
            <summary>
            Interface that needs to be implemented by any logger
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Telemetry.ILogObserver.Info(SharePointPnP.Modernization.Framework.Telemetry.LogEntry)">
            <summary>
            Log Information
            </summary>
            <param name="entry">LogEntry object</param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Telemetry.ILogObserver.Warning(SharePointPnP.Modernization.Framework.Telemetry.LogEntry)">
            <summary>
            Warning Log
            </summary>
            <param name="entry">LogEntry object</param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Telemetry.ILogObserver.Error(SharePointPnP.Modernization.Framework.Telemetry.LogEntry)">
            <summary>
            Error Log
            </summary>
            <param name="entry">LogEntry object</param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Telemetry.ILogObserver.Debug(SharePointPnP.Modernization.Framework.Telemetry.LogEntry)">
            <summary>
            Debug Log
            </summary>
            <param name="entry">LogEntry object</param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Telemetry.ILogObserver.Flush">
            <summary>
            Pushes all output to destination
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Telemetry.ILogObserver.SetPageId(System.String)">
            <summary>
            Sets the id of the page that's being transformed
            </summary>
            <param name="pageId">id of the page</param>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Telemetry.LogEntry">
            <summary>
            Defines an entry to log
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Telemetry.LogEntry.#ctor">
            <summary>
            Create a new Log Entry
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Telemetry.LogEntry.Message">
            <summary>
            Gets or sets Log message
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Telemetry.LogEntry.CorrelationId">
            <summary>
            Gets or sets CorrelationId of type Guid
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Telemetry.LogEntry.Source">
            <summary>
            Gets or sets Log source
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Telemetry.LogEntry.Exception">
            <summary>
            Gets or sets Log Exception
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Telemetry.LogEntry.Heading">
            <summary>
            Specified the logical grouping for the messages based on the stage of transformation
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Telemetry.LogEntry.IgnoreException">
            <summary>
            For those areas where we swallow errors or they are non-critical to report
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Telemetry.LogEntry.EntryTime">
            <summary>
            Time in which the log entry was made
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Telemetry.LogEntry.PageId">
            <summary>
            Page that's being transformed
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Telemetry.LogEntry.Significance">
            <summary>
            Extra significance of the entry for the logs
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Telemetry.LogEntry.IsCriticalException">
            <summary>
            Marks this error as a critical exception that prevents transformation
            </summary>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Telemetry.LogEntrySignificance">
            <summary>
            Specfies to the loggers that a specific entry has significance.
            </summary>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Telemetry.LogHelpers">
            <summary>
            Class with extension methods that are used to help with logging
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Telemetry.LogHelpers.ToYesNoString(System.Boolean)">
            <summary>
            Converts boolean value to Yes/No string
            </summary>
            <param name="value">Boolean value</param>
            <returns>Yes or No</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Telemetry.LogHelpers.FormatAsFriendlyTitle(System.String)">
            <summary>
            Formats a string that has the format ThisIsAClassName and formats in a friendly way
            </summary>
            <param name="value">string value</param>
            <returns>Friendly string value</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Telemetry.LogHelpers.DetailSettingsAsLogEntries(SharePointPnP.Modernization.Framework.Transform.PageTransformationInformation,System.String)">
            <summary>
            Use reflection to read the object properties and detail the values
            </summary>
            <param name="pti">PageTransformationInformation object</param>
            <returns>List of log records</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Telemetry.LogHelpers.DisplaySharePointVersion(SharePointPnP.Modernization.Framework.Transform.SPVersion)">
            <summary>
            Display version for SharePoint
            </summary>
            <param name="version">SharePoint version</param>
            <returns>SharePoint version in string format</returns>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Telemetry.LogLevel">
            <summary>
            Availabe logging levels
            </summary>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Telemetry.LogLevel.Debug">
            <summary>
            Debug Log Level
            </summary>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Telemetry.LogLevel.Error">
            <summary>
            Error Log Level
            </summary>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Telemetry.LogLevel.Warning">
            <summary>
            Warning Log Level
            </summary>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Telemetry.LogLevel.Information">
            <summary>
            Information Log Level
            </summary>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Telemetry.Observers.ConsoleObserver">
            <summary>
            Logger that logs to the console output
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:SharePointPnP.Modernization.Framework.Telemetry.Observers.ConsoleObserver.Logs" -->
        <member name="M:SharePointPnP.Modernization.Framework.Telemetry.Observers.ConsoleObserver.#ctor(System.Boolean)">
            <summary>
            Console Observer constructor
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Telemetry.Observers.ConsoleObserver.Debug(SharePointPnP.Modernization.Framework.Telemetry.LogEntry)">
            <summary>
            Output on any warnings generated by the transform process
            </summary>
            <param name="entry"></param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Telemetry.Observers.ConsoleObserver.Error(SharePointPnP.Modernization.Framework.Telemetry.LogEntry)">
            <summary>
            Errors 
            </summary>
            <param name="entry"></param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Telemetry.Observers.ConsoleObserver.Flush">
            <summary>
            Output a summary to the console
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Telemetry.Observers.ConsoleObserver.Info(SharePointPnP.Modernization.Framework.Telemetry.LogEntry)">
            <summary>
            Output on operations throughout the transform process
            </summary>
            <param name="entry"></param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Telemetry.Observers.ConsoleObserver.Warning(SharePointPnP.Modernization.Framework.Telemetry.LogEntry)">
            <summary>
            Output on any warnings generated by the transform process
            </summary>
            <param name="entry"></param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Telemetry.Observers.ConsoleObserver.SetPageId(System.String)">
            <summary>
            Sets the id of the page that's being transformed
            </summary>
            <param name="pageName">Id of the page</param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Telemetry.Observers.ConsoleObserver.Write(System.String,System.ConsoleColor)">
            <summary>
            Cental method to output to console
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Telemetry.Observers.MarkdownObserver">
            <summary>
            Markdown observer intended for end-user output
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Telemetry.Observers.MarkdownObserver.#ctor(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Constructor for specifying to include debug entries
            </summary>
            <param name="fileName">Name used to construct the log file name</param>
            <param name="folder">Folder that will hold the log file</param>
            <param name="includeDebugEntries">Include Debug Log Entries</param>
        </member>
        <!-- Badly formed XML comment ignored for member "P:SharePointPnP.Modernization.Framework.Telemetry.Observers.MarkdownObserver.Logs" -->
        <member name="M:SharePointPnP.Modernization.Framework.Telemetry.Observers.MarkdownObserver.Debug(SharePointPnP.Modernization.Framework.Telemetry.LogEntry)">
            <summary>
            Debug level of data not recorded unless in debug mode
            </summary>
            <param name="entry"></param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Telemetry.Observers.MarkdownObserver.Error(SharePointPnP.Modernization.Framework.Telemetry.LogEntry)">
            <summary>
            Errors 
            </summary>
            <param name="entry"></param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Telemetry.Observers.MarkdownObserver.Info(SharePointPnP.Modernization.Framework.Telemetry.LogEntry)">
            <summary>
            Reporting operations throughout the transform process
            </summary>
            <param name="entry"></param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Telemetry.Observers.MarkdownObserver.Warning(SharePointPnP.Modernization.Framework.Telemetry.LogEntry)">
            <summary>
            Report on any warnings generated by the reporting tool
            </summary>
            <param name="entry"></param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Telemetry.Observers.MarkdownObserver.SetPageId(System.String)">
            <summary>
            Sets the id of the page that's being transformed
            </summary>
            <param name="pageId">Id of the page</param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Telemetry.Observers.MarkdownObserver.GenerateReportWithSummaryAtTop(System.Boolean)">
            <summary>
            Generates a markdown based report based on the logs
            </summary>
            <returns></returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Telemetry.Observers.MarkdownObserver.GenerateIssueSummaryReport(System.Text.StringBuilder,System.Collections.Generic.List{SharePointPnP.Modernization.Framework.Entities.TransformationLogAnalysis})">
            <summary>
            Generate a summary report
            </summary>
            <param name="report"></param>
            <param name="summeries"></param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Telemetry.Observers.MarkdownObserver.AnalyseLogsForReport(System.Collections.Generic.List{System.Tuple{SharePointPnP.Modernization.Framework.Telemetry.LogLevel,SharePointPnP.Modernization.Framework.Telemetry.LogEntry}},System.String)">
            <summary>
            Analyses logs and extracts key information for reports
            </summary>
            <returns></returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Telemetry.Observers.MarkdownObserver.GetBaseUrl(System.Tuple{SharePointPnP.Modernization.Framework.Telemetry.LogLevel,SharePointPnP.Modernization.Framework.Telemetry.LogEntry})">
            <summary>
            Gets base url for report
            </summary>
            <param name="sourceSite"></param>
            <returns></returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Telemetry.Observers.MarkdownObserver.Flush">
            <summary>
            Output the report when flush is called
            </summary>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Telemetry.Observers.MarkdownToSharePointObserver">
            <summary>
            Writes an MD log file to a folder (default = Transformation-Reports) inside the sitepages library
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Telemetry.Observers.MarkdownToSharePointObserver.#ctor(Microsoft.SharePoint.Client.ClientContext,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Constructor to save a markdown report to SharePoint Modern Site Assets library
            </summary>
            <param name="context"></param>
            <param name="libraryName"></param>
            <param name="folderName"></param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Telemetry.Observers.MarkdownToSharePointObserver.EnsureDestination">
            <summary>
            Ensure Folder - Just make sure the location exists 
            </summary>
            <returns></returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Telemetry.Observers.MarkdownToSharePointObserver.Flush">
            <summary>
            Write the report to SharePoint
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Telemetry.Observers.MarkdownToSharePointObserver.GetMarkdownJsonProperties(System.String)">
            <summary>
            Construct a markdown web part properties
            </summary>
            <param name="report"></param>
            <returns></returns>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Telemetry.PageTelemetry">
            <summary>
            Class handling telemetry
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Telemetry.PageTelemetry.#ctor(System.String)">
            <summary>
            Instantiates the telemetry client
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Telemetry.PageTelemetry.LogTransformationDone(System.TimeSpan,System.String,SharePointPnP.Modernization.Framework.Transform.BaseTransformationInformation)">
            <summary>
            Sends a transformation done event
            </summary>
            <param name="duration">Duration of the page transformation</param>
            <param name="pageType">Type of page that was transformed</param>
            <param name="baseTransformationInformation">Information about the transformation</param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Telemetry.PageTelemetry.LogError(System.Exception,System.String)">
            <summary>
            Logs a page transformation error
            </summary>
            <param name="ex">Exception object</param>
            <param name="location">Location that generated this error</param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Telemetry.PageTelemetry.Flush">
            <summary>
            Ensure telemetry data is send to server
            </summary>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Transform.AssetTransfer">
            <summary>
            Class for operations for transferring the assets over to the target site collection
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.AssetTransfer.#ctor(Microsoft.SharePoint.Client.ClientContext,Microsoft.SharePoint.Client.ClientContext,System.Collections.Generic.IList{SharePointPnP.Modernization.Framework.Telemetry.ILogObserver})">
            <summary>
            Constructor for the asset transfer class
            </summary>
            <param name="source">Source connection to SharePoint</param>
            <param name="target">Target connection to SharePoint</param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.AssetTransfer.Validate">
            <summary>
            Perform validation
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.AssetTransfer.TransferAsset(System.String,System.String)">
            <summary>
            Main entry point to perform the series of operations to transfer related assets
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.AssetTransfer.ValidateAssetInSupportedLocation(System.String)">
            <summary>
            Checks if the URL is located in a supported location
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.AssetTransfer.EnsureDestination(System.String)">
            <summary>
            Ensure the site assets and page sub-folder exists in the target location
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.AssetTransfer.EnsureSiteAssetsLibrary">
            <summary>
            Create a site assets library
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.AssetTransfer.CopyAssetToTargetLocation(System.String,System.String,System.Int32)">
            <summary>
            Copy the file from the source to the target location
            </summary>
            <param name="sourceFileUrl"></param>
            <param name="targetLocationUrl"></param>
            <remarks>
                Based on the documentation: https://docs.microsoft.com/en-us/sharepoint/dev/solution-guidance/upload-large-files-sample-app-for-sharepoint
            </remarks>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.AssetTransfer.StoreAssetTransferred(SharePointPnP.Modernization.Framework.Entities.AssetTransferredEntity)">
            <summary>
            Stores an asset transfer reference
            </summary>
            <param name="assetTransferReferenceEntity"></param>
            <param name="update"></param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.AssetTransfer.GetAssetTransferredIfExists(SharePointPnP.Modernization.Framework.Entities.AssetTransferredEntity)">
            <summary>
            Get asset transfer details if they already exist
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.AssetTransfer.ConvertFileToFolderFriendlyName(System.String)">
            <summary>
            Converts the file name into a friendly format
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.AssetTransfer.EnsureAssetContextIfRequired(System.String)">
            <summary>
            Ensures that we have context of the source site collection
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.AssetTransfer.EnsureAssetContextIfRequired(Microsoft.SharePoint.Client.ClientContext,System.String)">
            <summary>
            Ensures that we have context of the source site collection
            </summary>
            <param name="context">Source site context</param>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Transform.BasePageTransformator">
            <summary>
            Base page transformator class that contains logic that applies for all page transformations
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.BasePageTransformator.GetVersion">
            <summary>
            Gets the version of the assembly
            </summary>
            <returns></returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.BasePageTransformator.LoadClientObject(Microsoft.SharePoint.Client.ClientContext,System.Boolean)">
            <summary>
            Loads the telemetry and properties for the client object
            </summary>
            <param name="clientContext"></param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.BasePageTransformator.CrossFarmTransformationValidation(SharePointPnP.Modernization.Framework.Transform.BaseTransformationInformation)">
            <summary>
            Validates settings when doing a cross farm transformation
            </summary>
            <param name="baseTransformationInformation">Transformation Information</param>
            <remarks>Will disable feature if not supported</remarks>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.BasePageTransformator.InitializeUserMapping(SharePointPnP.Modernization.Framework.Transform.BaseTransformationInformation)">
            <summary>
            Loads the User Mapping Files
            </summary>
            <param name="baseTransformationInformation"></param>
            <param name="sourceClientContext"></param>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Transform.BaseTransform">
            <summary>
            Base logging implementation
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.BaseTransform.RegisteredLogObservers">
            <summary>
            List of registered log observers
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.BaseTransform.#ctor">
            <summary>
            Instantiation of base transform class
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.BaseTransform.RegisterObserver(SharePointPnP.Modernization.Framework.Telemetry.ILogObserver)">
            <summary>
            Registers the observer
            </summary>
            <param name="observer">The observer.</param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.BaseTransform.FlushObservers">
            <summary>
            Flush all log observers
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.BaseTransform.FlushSpecificObserver``1">
            <summary>
            Flush Specific Observer of a type
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.BaseTransform.LogError(System.String,System.String,System.Exception,System.Boolean,System.Boolean)">
            <summary>
            Notifies the observers of error messages
            </summary>
            <param name="logEntry">The message.</param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.BaseTransform.LogInfo(System.String,System.String,SharePointPnP.Modernization.Framework.Telemetry.LogEntrySignificance)">
            <summary>
            Notifies the observers of info messages
            </summary>
            <param name="logEntry">The message.</param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.BaseTransform.LogWarning(System.String,System.String)">
            <summary>
            Notifies the observers of warning messages
            </summary>
            <param name="logEntry">The message.</param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.BaseTransform.LogDebug(System.String,System.String)">
            <summary>
            Notifies the observers of debug messages
            </summary>
            <param name="logEntry">The message.</param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.BaseTransform.Log(SharePointPnP.Modernization.Framework.Telemetry.LogEntry,SharePointPnP.Modernization.Framework.Telemetry.LogLevel)">
            <summary>
            Log entries into the observers
            </summary>
            <param name="entry"></param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.BaseTransform.SetPageId(System.String)">
            <summary>
            Sets the page name of the page being transformed
            </summary>
            <param name="pageId">Name of the page being transformed</param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.BaseTransform.GetExactVersion(Microsoft.SharePoint.Client.ClientRuntimeContext)">
            <summary>
            Gets exact version of SharePoint
            </summary>
            <param name="clientContext"></param>
            <returns></returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.BaseTransform.GetVersion(Microsoft.SharePoint.Client.ClientRuntimeContext)">
            <summary>
            Gets the version of SharePoint
            </summary>
            <param name="clientContext"></param>
            <returns></returns>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Transform.BaseTransformationInformation">
            <summary>
            Information used to configure the page transformation process which applies to all types of page transformations
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.BaseTransformationInformation.SourcePage">
            <summary>
            Source wiki/webpart page we want to transform
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.BaseTransformationInformation.SourceFile">
            <summary>
            File to convert - used for web part pages living outside a library as these pages do not have an associated list item
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.BaseTransformationInformation.Overwrite">
            <summary>
            Overwrite the target page if it already exists?
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.BaseTransformationInformation.TargetPageName">
            <summary>
            Name for the transformed page
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.BaseTransformationInformation.TargetPageFolder">
            <summary>
            Target page folder
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.BaseTransformationInformation.TargetPageFolderOverridesDefaultFolder">
            <summary>
            When a target page folder is set, it overwrites the potentially default folder path (e.g. if the source page lived in a folder then that folder is in the default folder path)
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.BaseTransformationInformation.KeepPageSpecificPermissions">
            <summary>
            Apply the item level page permissions on to the target page, defaults to true
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.BaseTransformationInformation.RemoveEmptySectionsAndColumns">
            <summary>
            Removes empty sections and columns to optimize screen real estate
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.BaseTransformationInformation.HandleWikiImagesAndVideos">
            <summary>
            If true images and videos embedded in wiki text will be transformed to actual image/video web parts, 
            else they'll get a placeholder and will be added as separate web parts at the end of the page
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.BaseTransformationInformation.AddTableListImageAsImageWebPart">
            <summary>
            When an image lives inside a table (or list) then also add it as a separate image web part
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.BaseTransformationInformation.MappingProperties">
            <summary>
            Property bag for adding properties that will be exposed to the functions and selectors in the web part mapping file.
            These properties are used to condition the transformation process.
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.BaseTransformationInformation.KeepPageCreationModificationInformation">
            <summary>
            Set this property in case you want to retain the page's Author/Editor/Created/Modified fields. Note that a page publish will always set Editor/Modified
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.BaseTransformationInformation.PublishCreatedPage">
            <summary>
            Should the created page be immediately published (default = true)
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.BaseTransformationInformation.PostAsNews">
            <summary>
            Post the created page as news
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.BaseTransformationInformation.DisablePageComments">
            <summary>
            Disable page comments on the created page
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.BaseTransformationInformation.SkipUrlRewrite">
            <summary>
            Skip URL rewriting
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.BaseTransformationInformation.SkipDefaultUrlRewrite">
            <summary>
            Skip default URL rewriting, custom URL rewriting using a URL mapping file is still handled
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.BaseTransformationInformation.UrlMappingFile">
            <summary>
            Url to an URL mapping file
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.BaseTransformationInformation.SkipUserMapping">
            <summary>
            Don't perform user mapping
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.BaseTransformationInformation.UserMappingFile">
            <summary>
            User Mapping file
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.BaseTransformationInformation.LDAPConnectionString">
            <summary>
            Searches for users within a specific LDAP Connection String, if not specified domain LDAP will be calculated
            </summary>
            <example>
            LDAP://OU=Test,DC=ALPHADELTA,DC=LOCAL
            </example>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.BaseTransformationInformation.PageTitleOverride">
            <summary>
            Custom function callout that can be triggered to provide a tailored page title
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.BaseTransformationInformation.LayoutTransformatorOverride">
            <summary>
            Custom layout transformator to be used for this page
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.BaseTransformationInformation.ContentTransformatorOverride">
            <summary>
            Custom content transformator to be used for this page
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.BaseTransformationInformation.SkipTelemetry">
            <summary>
            Disable telemetry: we use telemetry to make this tool better by sending anonymous data, but you're free to disable this
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.BaseTransformationInformation.Folder">
            <summary>
            Folder where the page to transform lives in
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.BaseTransformationInformation.IsCrossFarmTransformation">
            <summary>
            Indicates if this transformation spans farms (on-prem to online tenant, online tenant A to online tenant B)
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.BaseTransformationInformation.IsCrossSiteTransformation">
            <summary>
            Indicates if the transformation spans site collections or whether it's an in-place page transformation
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.BaseTransformationInformation.SourceVersion">
            <summary>
            SharePoint version of the source 
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.BaseTransformationInformation.SourceVersionNumber">
            <summary>
            SharePoint version number of the source 
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.BaseTransformationInformation.TargetVersion">
            <summary>
            SharePoint version of the target 
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.BaseTransformationInformation.TargetVersionNumber">
            <summary>
            SharePoint version number of the target 
            </summary>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Transform.FilterChainingOperator.And">
            <summary>
            Filter is chained using an And operator
            </summary>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Transform.FilterChainingOperator.Or">
            <summary>
            Filter is chained using an Or operator
            </summary>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Transform.FilterFieldQueryOperator.Eq">
            <summary>
            Equal to
            </summary>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Transform.FilterFieldQueryOperator.Neq">
            <summary>
            Not equal to
            </summary>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Transform.FilterFieldQueryOperator.Gt">
            <summary>
            Greater than
            </summary>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Transform.FilterFieldQueryOperator.Geq">
            <summary>
            Greater than or equal to
            </summary>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Transform.FilterFieldQueryOperator.Lt">
            <summary>
            Less than
            </summary>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Transform.FilterFieldQueryOperator.Leq">
            <summary>
            Less than or equal to
            </summary>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Transform.FilterFieldQueryOperator.BeginsWith">
            <summary>
            Begins with
            </summary>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Transform.FilterFieldQueryOperator.Contains">
            <summary>
            Contains
            </summary>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Transform.FilterFieldQueryOperator.ContainsAny">
            <summary>
            Contains any of
            </summary>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Transform.FilterFieldQueryOperator.ContainsAll">
            <summary>
            Contains all of
            </summary>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Transform.ContentByQuerySearchTransformator">
            <summary>
            Class used to generate contentrollup (=highlighted content) web part properties coming from either a content by query or content by search web part
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.ContentByQuerySearchTransformator.#ctor(Microsoft.SharePoint.Client.ClientContext)">
            <summary>
            Instantiates the class
            </summary>
            <param name="cc">Client context for the web holding the source page</param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.ContentByQuerySearchTransformator.TransformUserDocuments">
            <summary>
            Generate contentrollup (=highlighted content) web part properties coming from a content by search web part
            </summary>
            <param name="cbs">Properties coming from the content by search web part</param>
            <returns>Properties for highlighted content web part</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.ContentByQuerySearchTransformator.TransformContentBySearchWebPartToHighlightedContent(SharePointPnP.Modernization.Framework.Transform.ContentBySearch)">
            <summary>
            Generate contentrollup (=highlighted content) web part properties coming from a content by search web part
            </summary>
            <param name="cbs">Properties coming from the content by search web part</param>
            <returns>Properties for highlighted content web part</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.ContentByQuerySearchTransformator.TransformContentByQueryWebPartToHighlightedContent(SharePointPnP.Modernization.Framework.Transform.ContentByQuery)">
            <summary>
            Generate contentrollup (=highlighted content) web part properties coming from a content by query web part
            </summary>
            <param name="cbq">Properties coming from the content by query web part</param>
            <returns>Properties for highlighted content web part</returns>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Transform.ContentTransformator">
            <summary>
            Transforms content from "classic" page to modern client side page
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.ContentTransformator.#ctor(Microsoft.SharePoint.Client.ClientContext,OfficeDevPnP.Core.Pages.ClientSidePage,SharePointPnP.Modernization.Framework.PageTransformation,SharePointPnP.Modernization.Framework.Transform.BaseTransformationInformation,System.Collections.Generic.IList{SharePointPnP.Modernization.Framework.Telemetry.ILogObserver})">
            <summary>
            Instantiates the content transformator
            </summary>
            <param name="page">Client side page that will be updates</param>
            <param name="pageTransformation">Transformation information</param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.ContentTransformator.Transform(System.Collections.Generic.List{SharePointPnP.Modernization.Framework.Entities.WebPartEntity})">
            <summary>
            Transforms the passed web parts into the loaded client side page
            </summary>
            <param name="webParts">List of web parts that need to be transformed</param>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Transform.IContentTransformator">
            <summary>
            Interface implemented by all content transformators
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.IContentTransformator.Transform(System.Collections.Generic.List{SharePointPnP.Modernization.Framework.Entities.WebPartEntity})">
            <summary>
            Transforms the passed web parts into the loaded client side page
            </summary>
            <param name="webParts">List of web parts that need to be transformed</param>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Transform.ILayoutTransformator">
            <summary>
            Interface implemented by all layout transformators
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.ILayoutTransformator.Transform(System.Tuple{SharePointPnP.Modernization.Framework.Pages.PageLayout,System.Collections.Generic.List{SharePointPnP.Modernization.Framework.Entities.WebPartEntity}})">
            <summary>
            Transforms a classic wiki/webpart page layout into a modern client side page layout
            </summary>
            <param name="pageData">Information about the analyed page</param>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Transform.IHtmlTransformator">
            <summary>
            Interface implemented by all html transformators
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.IHtmlTransformator.Transform(System.String,System.Boolean)">
            <summary>
            Transforms the passed html to be usable by the client side text part
            </summary>
            <param name="text">Html to be transformed</param>
            <param name="usePlaceHolder">Insert placeholders for images and iframe tags</param>
            <returns>Html that can be used and edited via the client side text part</returns>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Transform.LayoutTransformator">
            <summary>
            Transforms the layout of a classic wiki/webpart page into a modern client side page using sections and columns
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.LayoutTransformator.#ctor(OfficeDevPnP.Core.Pages.ClientSidePage)">
            <summary>
            Creates a layout transformator instance
            </summary>
            <param name="page">Client side page that will be receive the created layout</param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.LayoutTransformator.Transform(System.Tuple{SharePointPnP.Modernization.Framework.Pages.PageLayout,System.Collections.Generic.List{SharePointPnP.Modernization.Framework.Entities.WebPartEntity}})">
            <summary>
            Transforms a classic wiki/webpart page layout into a modern client side page layout
            </summary>
            <param name="pageData">Information about the analyed page</param>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Transform.ModernizationCenterInformation">
            <summary>
            This class defines the page transformation configuration for when there's a ModernizationCenter hooked up
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.ModernizationCenterInformation.ModernizationCenterUri">
            <summary>
            Url to the customer's modernization center site
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.ModernizationCenterInformation.AddPageAcceptBanner">
            <summary>
            Add a page accept banner solution on the generated pages
            </summary>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Transform.PageTransformationInformation">
            <summary>
            Information used to configure the wiki and web part page transformation process
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.PageTransformationInformation.#ctor(Microsoft.SharePoint.Client.ListItem)">
            <summary>
            Instantiates the page transformation class
            </summary>
            <param name="sourcePage">Page we want to transform</param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.PageTransformationInformation.#ctor(Microsoft.SharePoint.Client.ListItem,System.String)">
            <summary>
            Instantiates the page transformation class
            </summary>
            <param name="sourcePage">Page we want to transform</param>
            <param name="targetPageName">Name of the target page</param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.PageTransformationInformation.#ctor(Microsoft.SharePoint.Client.ListItem,System.String,System.Boolean)">
            <summary>
            Instantiates the page transformation class
            </summary>
            <param name="sourcePage">Page we want to transform</param>
            <param name="targetPageName">Name of the target page</param>
            <param name="overwrite">Do we overwrite the target page if it already exists</param>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.PageTransformationInformation.TargetPageTakesSourcePageName">
            <summary>
            Target page will get the source page name, source page will be renamed. Used in conjunction with SourcePagePrefix
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.PageTransformationInformation.TargetPagePrefix">
            <summary>
            Prefix used to name the target page
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.PageTransformationInformation.SourcePagePrefix">
            <summary>
            Prefix used to name the source page. Used in conjunction with TargetPageTakesSourcePageName
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.PageTransformationInformation.CopyPageMetadata">
            <summary>
            Copy the page metadata (if any) to the created modern client side page. Defaults to false
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.PageTransformationInformation.PageHeader">
            <summary>
            Configuration of the page header to apply
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.PageTransformationInformation.SetAuthorInPageHeader">
            <summary>
            Sets the page author in the page header similar to the original page author
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.PageTransformationInformation.ModernizationCenterInformation">
            <summary>
            Configuration driven by the presence of a modernization center
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.PageTransformationInformation.ReplaceHomePageWithDefaultHomePage">
            <summary>
            If the page to be transformed is the web's home page then replace with stock modern home page instead of transforming it
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.PageTransformationInformation.SetDefaultTargetPagePrefix">
            <summary>
            Set's default target page prefix
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.PageTransformationInformation.SetDefaultSourcePagePrefix">
            <summary>
            Set's default source page prefix
            </summary>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Transform.PageTransformator">
            <summary>
            Transforms a classic wiki/webpart page into a modern client side page
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.PageTransformator.#ctor(Microsoft.SharePoint.Client.ClientContext,Microsoft.SharePoint.Client.ClientContext)">
            <summary>
            Creates a page transformator instance with a target destination of a target web e.g. Modern/Communication Site
            </summary>
            <param name="sourceClientContext">ClientContext of the site holding the page</param>
            <param name="targetClientContext">ClientContext of the site that will receive the modernized page</param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.PageTransformator.#ctor(Microsoft.SharePoint.Client.ClientContext)">
            <summary>
            Creates a page transformator instance
            </summary>
            <param name="sourceClientContext">ClientContext of the site holding the page</param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.PageTransformator.#ctor(Microsoft.SharePoint.Client.ClientContext,System.String)">
            <summary>
            Creates a page transformator instance
            </summary>
            <param name="sourceClientContext">ClientContext of the site holding the page</param>
            <param name="pageTransformationFile">Used page mapping file</param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.PageTransformator.#ctor(Microsoft.SharePoint.Client.ClientContext,Microsoft.SharePoint.Client.ClientContext,System.String)">
            <summary>
            Creates a page transformator instance
            </summary>
            <param name="sourceClientContext">ClientContext of the site holding the page</param>
            <param name="targetClientContext">ClientContext of the site that will receive the modernized page</param>
            <param name="pageTransformationFile">Used page mapping file</param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.PageTransformator.#ctor(Microsoft.SharePoint.Client.ClientContext,SharePointPnP.Modernization.Framework.PageTransformation)">
            <summary>
            Creates a page transformator instance
            </summary>
            <param name="sourceClientContext">ClientContext of the site holding the page</param>
            <param name="pageTransformationModel">Page transformation model</param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.PageTransformator.#ctor(Microsoft.SharePoint.Client.ClientContext,Microsoft.SharePoint.Client.ClientContext,SharePointPnP.Modernization.Framework.PageTransformation)">
            <summary>
            Creates a page transformator instance
            </summary>
            <param name="sourceClientContext">ClientContext of the site holding the page</param>
            <param name="targetClientContext">ClientContext of the site that will receive the modernized page</param>
            <param name="pageTransformationModel">Page transformation model</param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.PageTransformator.Transform(SharePointPnP.Modernization.Framework.Transform.PageTransformationInformation)">
            <summary>
            Transform the page
            </summary>
            <param name="pageTransformationInformation">Information about the page to transform</param>
            <returns>The path to the created modern page</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.PageTransformator.SwapPages(SharePointPnP.Modernization.Framework.Transform.PageTransformationInformation,System.String)">
            <summary>
            Performs the logic needed to swap a genered Migrated_Page.aspx to Page.aspx and then Page.aspx to Old_Page.aspx
            </summary>
            <param name="pageTransformationInformation">Information about the page to transform</param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.PageTransformator.LoadPageTransformationModel(System.String)">
            <summary>
            Loads a page transformation model from file
            </summary>
            <param name="pageTransformationFile">File holding the page transformation model</param>
            <returns>Page transformation model</returns>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Transform.HtmlTransformator">
            <summary>
            Transforms the received Html in html that can be displayed and maintained in the modern client side text part
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.HtmlTransformator.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.HtmlTransformator.Transform(System.String,System.Boolean)">
            <summary>
            Transforms the passed html to be usable by the client side text part
            </summary>
            <param name="text">Html to be transformed</param>
            <param name="usePlaceHolder">Insert placeholders for images and iframe tags</param>
            <returns>Html that can be used and edited via the client side text part</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.HtmlTransformator.IsEmptyParagraph(System.String)">
            <summary>
            Returns true is the passed html is "empty"
            </summary>
            <param name="text">Html to verify</param>
            <returns>True if considered empty, false otherwise</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.HtmlTransformator.TableStyleCodeToName(System.Int32)">
            <summary>
            Map wiki table style to a RTE compatible style
            </summary>
            <param name="tableStyleCode">Code used for the wiki table style</param>
            <returns>RTE compatible table style</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.HtmlTransformator.FontCodeToName(System.Int32)">
            <summary>
            Translates SharePoint wiki font size (e.g. ms-rtefontsize-3 means font size 3) to RTE font size name
            </summary>
            <param name="fontCode">Wiki font size code</param>
            <returns>RTE font size name</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.HtmlTransformator.ColorCodeToForegroundColorName(System.Int32)">
            <summary>
            Translated SharePoint Wiki foreground color number (ms-rteforecolor-2 means number 2 is used) to RTE compatible color name
            </summary>
            <param name="colorCode">Used color number</param>
            <returns>RTE color string</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.HtmlTransformator.ThemeCodeToForegroundColorName(System.Int32)">
            <summary>
            Translated SharePoint Wiki foreground theme color number (e.g. ms-rteThemeForeColor-6-1) to RTE compatible color name
            </summary>
            <param name="themeCode">Theme color code</param>
            <returns>RTE color string</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.HtmlTransformator.ColorCodeToBackgroundColorName(System.Int32)">
            <summary>
            Translated SharePoint Wiki background color number (ms-rtebackcolor-5 means number 5 is used) to RTE compatible color name
            </summary>
            <param name="colorCode">Used color number</param>
            <returns>RTE color string</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.HtmlTransformator.DetectBlockQuoteLevelParentContainer(System.Collections.Generic.Dictionary{AngleSharp.Dom.IElement,AngleSharp.Dom.IElement},AngleSharp.Dom.IElement,System.Int32@,AngleSharp.Dom.IElement@,AngleSharp.Dom.IElement@,System.Boolean@,System.Boolean@)">
            <summary>
            Recursively loop the blockquote elements until we're at the top level, returns needed information to process:
            - Level: how many indents where used
            - TopLevelBlockQuote: what is the top level blockquote that we'll be using as "replacement node"
            - If there already was a container created to store content at this level then let's return that one
            - If by walking the blockquote tree we see strike through being used then indicate that
            - If by walking the blockquote tree we see underline being used then indicate that
            </summary>
            <param name="replacementList"></param>
            <param name="blockQuote"></param>
            <param name="level"></param>
            <param name="topLevelBlockQuote"></param>
            <param name="insertionContainer"></param>
            <param name="strikeThroughWasUsed"></param>
            <param name="underLineWasUsed"></param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.HtmlTransformator.NormalizeTable(AngleSharp.Dom.IElement)">
            <summary>
            Returns the table as a normalized table object. Includes replacing row and col spans by actual empty cells
            </summary>
            <param name="table">Table to normalize</param>
            <returns>Normalized table</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.HtmlTransformator.GetTableDimensions(AngleSharp.Dom.IElement)">
            <summary>
            Gets the dimensions of a table, excluding the header
            </summary>
            <param name="table">Table to investigate</param>
            <returns>Tuple containing the columns and rows</returns>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.QuickLink.SourceItem">
            The info of the source item where does the quick link point to.
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.QuickLink.Image">
            The info of the image selected by user.
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.QuickLink.FabricReactIcon">
            The info of the icon selected by user.
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.QuickLink.ThumbnailType">
            Indicate the way that thumbnail is chosen and rendered.
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.QuickLink.RawPreviewImageUrl">
            To store the preview image that doesn't have guid set.
            If quick link is not targeting a SharePoint item, the image and title will be retrieved from embed service.
            Also in on-premise environment, the image preview doesn't have guids.
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.QuickLink.Id">
            Unique id of the quick link.
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.QuickLink.Title">
            Title of the quick link.
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.QuickLink.Description">
            Extra description field of the quick link item.
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.QuickLink.AltText">
            User customized alt text to place on the image for people with disabilities.
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.QuickLinkFabricReactIconInfo.IconName">
            The name of the icon.
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.SourceItemInfo.Url">
            Original url of the quick link.
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.SourceItemInfo.Guids">
            Guids that represent the quick link item.
            Only SharePoint item has guids. It is "undefined" for external items.
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.SourceItemInfo.ItemType">
            The type of object represented by the quick link. If the type is unknown, it will be considered
            as QuickLinkType.Link.
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.SourceItemInfo.FileExtension">
            File extension of the file represented by the quick link. Example: ".png". If the object represented
            by the quick link does not have a file extension or is not a file, this will be null or the empty string.
            E.g. Some OneNote doesn't have extensions and will need "progId" to identify them.
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.SourceItemInfo.ProgId">
            Identifier of the program used to open this kind of file or folder, if this is a file or folder.
            E.g. OneNote.
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.QuickLinkCustomizedImageInfo.Url">
            The source url of the customized image of the quick link.
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.QuickLinkCustomizedImageInfo.ImageFit">
            How image is fit into the container.
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.QuickLinkCustomizedImageInfo.Guids">
            Guids that can be used to load the picture from the micro-service, if specified.
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.WaffleLayoutOptions.IconSize">
            The size of icon displayed on each card.
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.WaffleLayoutOptions.OnlyShowThumbnail">
            Whether only image or icon is displayed in the waffle layout.
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.ListLayoutOptions.ShowDescription">
            Whether show the link description text of all link items.
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.ListLayoutOptions.ShowIcon">
            Whether show the icons of the link items.
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.ButtonLayoutOptions.IconPositionType">
            Whether to have icon and the position of the icon if icon is used. (IconPositionType.NoIcon | IconPositionType.IconToLeft | IconPositionType.IconToTop)
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.ButtonLayoutOptions.ButtonTreatment">
            The display style of the button.
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.ButtonLayoutOptions.TextAlignmentVertical">
            The option is only available when IconPositionType.noIcon or IconPositionType.IconToLeft
            The text can be either top aligned or center aligned. (ContentAlignment.Top | ContentAlignment.Center)
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.ButtonLayoutOptions.TextAlignmentHorizontal">
            The option is only available when IconPositionType.IconToTop
            The text can be either left aligned or center aligned. (ContentAlignment.Left | ContentAlignment.Center)
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.ButtonLayoutOptions.LinesOfText">
            Number of lines of text that helps user to make the card more compact. Allowed: LinesOfText.SingleLine | LinesOfText.TwoLines;
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.ButtonLayoutOptions.ShowDescription">
            Whether show the link description text of all link items.
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Transform.ImageFit.center">
            The image is not scaled. The image is centered and cropped within the content box.
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Transform.ImageFit.contain">
            The image is scaled to maintain its aspect ratio while being fully contained within the frame. The image will
            be centered horizontally and vertically within the frame. The space in the top and bottom or in the sides of
            the frame will be empty depending on the difference in aspect ratio between the image and the frame.
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Transform.ImageFit.cover">
            The image is scaled to maintain its aspect ratio while filling the frame. Portions of the image will be cropped from
            the top and bottom, or from the sides, depending on the difference in aspect ratio between the image and the frame.
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Transform.ImageFit.none">
            Neither the image nor the frame are scaled. If their sizes do not match, the image will either be cropped or the
            frame will have empty space.
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Transform.ImageFit.centerCover">
            The image will be centered horizontally and vertically within the frame and maintains its aspect ratio. It will
            behave as ImageFit.center if the image's natural height or width is less than the Image frame's height or width,
            but if both natural height and width are larger than the frame it will behave as ImageFit.cover.
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Transform.QuickLinkThumbnailSourceType.Image">
            A user customized image.
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Transform.QuickLinkThumbnailSourceType.FabricReactIcon">
            A user picked icon from fabric-react icon set.
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Transform.QuickLinkThumbnailSourceType.AutoSelect">
            The thumbnail of the item is automatically selected according to the layout type and item data.
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Transform.LinesOfText.SingleLine">
            The space of rendering the text is fixed to be one line.
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Transform.LinesOfText.TwoLines">
            The space of rendering the text is fixed to be two lines.
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Transform.LinesOfText.TwoLinesAutoCollapse">
            The maximum space of rendering the text is two lines.
            But if there is not enough text to fill two lines, the space is dynamic based on the text.
            I.e. The space could potentially be 0, 1, or 2 lines.
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Transform.IconPositionType.NoIcon">
            No icon is displayed in button card.
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Transform.IconPositionType.IconToLeft">
            Icon is displayed at left side of button card.
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Transform.IconPositionType.IconToTop">
            Icon is displayed at top side of button card.
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Transform.IconPositionType.IconOnly">
            Only icon is displayed, there is no other content.
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Transform.ButtonTreatment.None">
            No button treatment styles.
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Transform.ButtonTreatment.Outline">
            There will be an outline border around the button card.
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Transform.ButtonTreatment.FillColor">
            The background of the button card will be filled with single color.
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Transform.QuickLinksLayout.CompactCard">
            The compact card layout renderers CompactCard under GridLayout.
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Transform.QuickLinksLayout.FilmStrip">
            The filmstrip layout renderers TileCard under Carousel layout.
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Transform.QuickLinksLayout.Button">
            The button layout renders ButtonCard under GridLayout.
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Transform.QuickLinksLayout.List">
            The list layout renders ButtonCard under GridLayout.
            The ButtonCard rendered in list layout is pre-configured to be single line text without outline.
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Transform.QuickLinksLayout.Grid">
            The grid layout renderers TileCard under GridLayout.
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.Transform.QuickLinksLayout.Waffle">
            The waffle layout which renders smaller ButtonCard under GridLayout.
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Transform.QuickLinksTransformator">
            <summary>
            Class used to generate quicklinks web part properties
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.QuickLinksTransformator.#ctor(Microsoft.SharePoint.Client.ClientContext,System.Collections.Generic.IList{SharePointPnP.Modernization.Framework.Telemetry.ILogObserver})">
            <summary>
            Instantiates the class
            </summary>
            <param name="cc">Client context for the web holding the source page</param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.QuickLinksTransformator.Transform(System.Collections.Generic.List{SharePointPnP.Modernization.Framework.Transform.SummaryLink},System.String)">
            <summary>
            Generate quick links web part properties coming from a list of links
            </summary>
            <param name="summaryLinks">Links coming from the summarylink web part</param>
            <param name="quickLinksJsonProperties">Json properties blob for QuickLinks web part tailoring</param>
            <returns>Properties for highlighted content web part</returns>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Transform.SPVersion">
            <summary>
            Enum listing the SharePoint versions as used by the transformation engine
            </summary>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Transform.SummaryLinksHtmlTransformator">
            <summary>
            This class is used to rewrite the html coming out of the SummaryLinks web part
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.SummaryLinksHtmlTransformator.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.SummaryLinksHtmlTransformator.Transform(System.String,System.Boolean)">
            <summary>
            Transforms the passed summarylinks html to be usable by the client side text part
            </summary>
            <param name="text">Summarylinks html to be transformed</param>
            <returns>Html that can be used and edited via the client side text part</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.SummaryLinksHtmlTransformator.GetLinks(System.String)">
            <summary>
            Transforms the passed summarylinks html a list of links
            </summary>
            <param name="text">Summarylinks html to be transformed</param>
            <returns>List of links</returns>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Transform.TokenParser">
            <summary>
            Resolves tokens by their actual representation
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.TokenParser.ReplaceTokens(System.String,SharePointPnP.Modernization.Framework.Entities.WebPartEntity)">
            <summary>
            Replaces the tokens in the provided input string with their values
            </summary>
            <param name="input">String with tokens</param>
            <param name="webPartData">Web part information holding all possible tokens for this web part</param>
            <returns>A string with tokens replaced by actual values</returns>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Transform.UrlTransformator">
            <summary>
            Class responsible for transforming source page urls to target page urls via url rewriting
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.UrlTransformator.#ctor(SharePointPnP.Modernization.Framework.Transform.BaseTransformationInformation,Microsoft.SharePoint.Client.ClientContext,Microsoft.SharePoint.Client.ClientContext,System.Collections.Generic.IList{SharePointPnP.Modernization.Framework.Telemetry.ILogObserver})">
            <summary>
            Default constructor
            </summary>
            <param name="baseTransformationInformation">Page transformation information object</param>
            <param name="sourceContext">ClientContext of the source page</param>
            <param name="targetContext">ClientContext of the target page</param>
            <param name="logObservers">Connected loggers</param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.UrlTransformator.Transform(System.String)">
            <summary>
            Rewrites the url inside the passed input string
            </summary>
            <param name="input">String to url rewrite</param>
            <returns>Url rewritten string</returns>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Transform.UserTransformator">
            <summary>
            Class that handles the transformation of users 
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.UserTransformator.IsUserMappingSpecified">
            <summary>
            Determine if the user transforming according to mapped file
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Transform.UserTransformator.ShouldMapUsers">
            <summary>
            Determines if we should attempt to map users
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.UserTransformator.#ctor(SharePointPnP.Modernization.Framework.Transform.BaseTransformationInformation,Microsoft.SharePoint.Client.ClientContext,Microsoft.SharePoint.Client.ClientContext,System.Collections.Generic.IList{SharePointPnP.Modernization.Framework.Telemetry.ILogObserver})">
            <summary>
            User Transformator constructor
            </summary>
            <param name="baseTransformationInformation">Transformation configuration settings</param>
            <param name="sourceContext">Source Context</param>
            <param name="targetContext">Target Context</param>
            <param name="logObservers">Connected loggers</param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.UserTransformator.RemapPrincipal(System.String)">
            <summary>
            Remap principal to target principal
            </summary>
            <param name="principal"></param>
            <returns>Principal for the target site</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.UserTransformator.RemapPrincipal(Microsoft.SharePoint.Client.ClientContext,Microsoft.SharePoint.Client.FieldUserValue)">
            <summary>
            Remap principal to target principal
            </summary>
            <param name="context">ClientContext of the source web</param>
            <param name="userField">User field value object</param>
            <returns>Mapped principal that works on the target site</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.UserTransformator.IsExecutingTransformOnDomain">
            <summary>
            Determine if the transform is running on a computer on the domain
            </summary>
            <returns>True if the executing machine is domain joined</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.UserTransformator.EnsureValidUserExists(System.String)">
            <summary>
            Ensures the current user exists on the target site
            </summary>
            <param name="principal"></param>
            <returns></returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.UserTransformator.GetFriendlyComputerDomain">
            <summary>
            Gets the transform executing domain
            </summary>
            <returns></returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.UserTransformator.GetLDAPConnectionString">
            <summary>
            Get LDAP Connection string
            </summary>
            <returns></returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.UserTransformator.SearchSourceDomainForUPN(SharePointPnP.Modernization.Framework.Transform.AccountType,System.String)">
            <summary>
            Search the source domain for a UPN
            </summary>
            <param name="accountType"></param>
            <param name="samAccountName"></param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.UserTransformator.GetProperty(System.DirectoryServices.SearchResult,System.String)">
            <summary>
            Get a property from resulting AD query
            </summary>
            <param name="searchResult"></param>
            <param name="PropertyName"></param>
            <returns></returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.UserTransformator.ResolveFriendlyDomainToLdapDomain(System.String)">
            <summary>
            Resolves friendly domain name to Fully Qualified Domain Name
            </summary>
            <param name="friendlyDomainName"></param>
            <returns></returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.UserTransformator.StripUserPrefixTokenAndDomain(System.String)">
            <summary>
            Strip User Prefix Token And Domain
            </summary>
            <param name="principal"></param>
            <returns></returns>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Transform.AccountType">
            <summary>
            Simple class for value for account type
            </summary>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Transform.WikiHtmlTransformator">
            <summary>
            Translates wiki text parts in to a list of real and fake web parts
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.WikiHtmlTransformator.#ctor(Microsoft.SharePoint.Client.ClientContext,OfficeDevPnP.Core.Pages.ClientSidePage,SharePointPnP.Modernization.Framework.Transform.BaseTransformationInformation,System.Collections.Generic.IList{SharePointPnP.Modernization.Framework.Telemetry.ILogObserver})">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Transform.WikiHtmlTransformator.TransformPlusSplit(System.Collections.Generic.List{SharePointPnP.Modernization.Framework.Entities.WebPartEntity},System.Boolean,System.Boolean)">
            <summary>
            Replaces embedded images and iframes with respective "fake" image and video web parts. Depending on the 
            image/iframe position in the html the wiki text is broken up in multiple wiki text parts intermixed 
            with image and/or video parts. Later on these web parts will be transformed to client side web parts
            </summary>
            <param name="wikiPageWebParts">List of web parts on the page</param>
            <returns>Updated list of web parts</returns>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Cache.CacheManager">
            <summary>
            Caching manager, singleton
            Important: don't cache SharePoint Client objects as these are tied to a specific client context and hence will fail when there's context switching!
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Cache.CacheManager.Instance">
            <summary>
            Get's the single cachemanager instance, singleton pattern
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Cache.CacheManager.SharepointVersions">
            <summary>
            List of URLs and SharePoint Versions
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Cache.CacheManager.ExactSharepointVersions">
            <summary>
            List of URLs and Exact SharePoint Versions
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Cache.CacheManager.AADTenantId">
            <summary>
            AADTenantID's used
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Cache.CacheManager.AssetsTransfered">
            <summary>
            List of assets transferred from source to destination
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Cache.CacheManager.GetClientSideComponents(OfficeDevPnP.Core.Pages.ClientSidePage)">
            <summary>
            Get's the clientside components from cache or if needed retrieves and caches them
            </summary>
            <param name="page">Page to grab the components for</param>
            <returns></returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Cache.CacheManager.ClearClientSideComponents">
            <summary>
            Clear the clientside component cache
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Cache.CacheManager.GetBaseTemplate(Microsoft.SharePoint.Client.Web)">
            <summary>
            Get's the base template that will be used to filter out "OOB" fields
            </summary>
            <param name="web">web to operate against</param>
            <returns>Provisioning template of the base template of STS#0</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Cache.CacheManager.ClearBaseTemplate">
            <summary>
            Clear base template cache
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Cache.CacheManager.GetFieldsToCopy(Microsoft.SharePoint.Client.Web,Microsoft.SharePoint.Client.List,System.String)">
            <summary>
            Get the list of fields that need to be copied from cache. If cache is empty the list will be calculated
            </summary>
            <param name="web">Web to operate against</param>
            <param name="sourceLibrary">Pages library instance</param>
            <returns>List of fields that need to be copied</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Cache.CacheManager.GetPublishingContentTypeField(Microsoft.SharePoint.Client.List,System.String,System.String)">
            <summary>
            Get field information of a content type field
            </summary>
            <param name="pagesLibrary">Pages library list</param>
            <param name="contentTypeId">ID of the content type</param>
            <param name="fieldName">Name of the field to get information from</param>
            <returns>FieldData object holding field information</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Cache.CacheManager.ClearFieldsToCopy">
            <summary>
            Clear the fields to copy cache
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Cache.CacheManager.SetPublishingWeb(System.String)">
            <summary>
            Marks this web as a publishing web
            </summary>
            <param name="webUrl">Url of the web</param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Cache.CacheManager.SetBlogWeb(System.String)">
            <summary>
            Marks this web as a blog web
            </summary>
            <param name="webUrl">Url of the web</param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Cache.CacheManager.IsPublishingWeb(System.String)">
            <summary>
            Checks if this is publishing web
            </summary>
            <param name="webUrl">Web url to check</param>
            <returns>True if publishing, false otherwise</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Cache.CacheManager.IsBlogWeb(System.String)">
            <summary>
            Checks if this is blog web
            </summary>
            <param name="webUrl">Web url to check</param>
            <returns>True if blog, false otherwise</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Cache.CacheManager.GetPublishingPagesLibraryName(Microsoft.SharePoint.Client.ClientContext)">
            <summary>
            Get translation for the publishing pages library
            </summary>
            <param name="context">Context of the site</param>
            <returns>Translated name of the pages library</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Cache.CacheManager.GetBlogListName(Microsoft.SharePoint.Client.ClientContext)">
            <summary>
            Get translation for the blog list name
            </summary>
            <param name="context">Context of the site</param>
            <returns>Translated name of the blog list</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Cache.CacheManager.GetResourceString(Microsoft.SharePoint.Client.ClientContext,System.String)">
            <summary>
            Returns the translated value for a resource string
            </summary>
            <param name="context">Context of the site</param>
            <param name="resource">Key of the resource (e.g. $Resources:core,ScriptEditorWebPartDescription;) </param>
            <returns>Translated string</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Cache.CacheManager.GetPageLayoutMapping(Microsoft.SharePoint.Client.ListItem)">
            <summary>
            Generate pagelayout mapping file for given publishing page
            </summary>
            <param name="page">Publishing page</param>
            <returns>Page layout mapping model</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Cache.CacheManager.ClearAllCaches">
            <summary>
            Clear all the caches
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Cache.CacheManager.ClearSharePointVersions">
            <summary>
            Clears Cached SharePoint versions
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Cache.CacheManager.ClearGeneratedPageLayoutMappings">
            <summary>
            Clears the cache of generated page layout mappings
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Cache.CacheManager.MappedUsers">
            <summary>
            Mapped users
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Cache.CacheManager.GetEnsuredUser(Microsoft.SharePoint.Client.ClientContext,System.String)">
            <summary>
            Run and cache the output value of EnsureUser for a given user
            </summary>
            <param name="context">ClientContext to operate on</param>
            <param name="userValue">User name of user to ensure</param>
            <returns>ResolvedUser instance holding information about the ensured user</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Cache.CacheManager.GetUserFromUserList(Microsoft.SharePoint.Client.ClientContext,System.String)">
            <summary>
            Lookup a user from the site's user list based upon the user's upn
            </summary>
            <param name="context">Context of the web holding the user list</param>
            <param name="userUpn">Upn of the user to fetch</param>
            <returns>A UserEntity instance holding information about the user</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Cache.CacheManager.GetUserFromUserList(Microsoft.SharePoint.Client.ClientContext,System.Int32)">
            <summary>
            Lookup a user from the site's user list based upon the user's id
            </summary>
            <param name="context">Context of the web holding the user list</param>
            <param name="userListId">Id of the user to fetch</param>
            <returns>A UserEntity instance holding information about the user</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Cache.CacheManager.GetContentTypeId(Microsoft.SharePoint.Client.List,System.String)">
            <summary>
            Get's the ID of a contenttype
            </summary>
            <param name="pagesLibrary">Pages library holding the content type</param>
            <param name="contentTypeName">Name of the content type</param>
            <returns>ID of the content type</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Cache.CacheManager.SetLastUsedTransformator(SharePointPnP.Modernization.Framework.Transform.BasePageTransformator)">
            <summary>
            Caches the last used page transformator instance, needed to postpone log writing when transforming multiple pages
            </summary>
            <param name="transformator"></param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Cache.CacheManager.GetLastUsedTransformator">
            <summary>
            Gets the last used page transformator instance
            </summary>
            <returns></returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Cache.CacheManager.GetUrlMapping(System.String,System.Collections.Generic.IList{SharePointPnP.Modernization.Framework.Telemetry.ILogObserver})">
            <summary>
            Returns a list of url mappings
            </summary>
            <param name="urlMappingFile">File with url mappings</param>
            <param name="logObservers">Attached list of log observers</param>
            <returns>List of url mappings</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Cache.CacheManager.GetUserMapping(System.String,System.Collections.Generic.IList{SharePointPnP.Modernization.Framework.Telemetry.ILogObserver})">
            <summary>
            Gets the list of user mappings, if first time file will be laoded
            </summary>
            <param name="userMappingFile">File with the user mappings</param>
            <param name="logObservers">Attached list of log observers</param>
            <returns>List of user mappings</returns>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Cache.FieldData">
            <summary>
            Field data used to transfer information about a field
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Cache.FieldData.FieldName">
            <summary>
            Internal name of the field
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Cache.FieldData.FieldId">
            <summary>
            Id of the field
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Cache.FieldData.FieldType">
            <summary>
            Type of the field
            </summary>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Constants">
            <summary>
            Constants used 
            </summary>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.KQL.KQLElement">
            <summary>
            Element in KQL query
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.KQL.KQLElement.Filter">
            <summary>
            Filter attribute name
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.KQL.KQLElement.Value">
            <summary>
            Value of the filter
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.KQL.KQLElement.Type">
            <summary>
            Type of filter
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.KQL.KQLElement.Operator">
            <summary>
            Filter operator
            </summary>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.KQL.KQLElement.Group">
            <summary>
            Filter group
            </summary>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.KQL.KQLPropertyOperator">
            <summary>
            Operators on KQL property filters
            </summary>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.KQL.KQLFilterType">
            <summary>
            KQL filter types
            </summary>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.KQL.KQLParser">
            <summary>
            Class to parse KQL queries
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.KQL.KQLParser.Parse(System.String)">
            <summary>
            Parses a KQL query and returns a list of tokens
            </summary>
            <param name="searchQuery">Query to parse</param>
            <returns>List of <see cref="T:SharePointPnP.Modernization.Framework.KQL.KQLElement"/> tokens</returns>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Utilities.CookieManager">
            <summary>
            Handles the "intercepting" of auth cookies that might have been added on the clientcontext object
            </summary>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Utilities.FileManager">
            <summary>
            Class that's responsible for loading (mapping) files
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Utilities.FileManager.#ctor(System.Collections.Generic.IList{SharePointPnP.Modernization.Framework.Telemetry.ILogObserver})">
            <summary>
            Default constructor
            </summary>
            <param name="logObservers">Connected loggers</param>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Utilities.FileManager.LoadUrlMappingFile(System.String)">
            <summary>
            Loads a URL mapping file
            </summary>
            <param name="mappingFile">Path to the mapping file</param>
            <returns>A collection of URLMapping objects</returns>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.Utilities.FileManager.LoadUserMappingFile(System.String)">
            <summary>
            Load User Mapping File
            </summary>
            <param name="mappingFile"></param>
            <returns></returns>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.PageTransformation">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.PageTransformation.BaseWebPart">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.PageTransformation.AddOns">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.PageTransformation.WebParts">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.PageTransformation.Version">
            <remarks/>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.BaseWebPart">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.BaseWebPart.Properties">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.BaseWebPart.Mappings">
            <remarks/>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Property">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Property.Name">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Property.Type">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Property.Functions">
            <remarks/>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.PropertyType">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.PropertyType.string">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.PropertyType.bool">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.PropertyType.guid">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.PropertyType.integer">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.PropertyType.datetime">
            <remarks/>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.WebPart">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.WebPart.Properties">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.WebPart.Mappings">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.WebPart.Type">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.WebPart.CrossSiteTransformationSupported">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.WebPart.CrossSiteTransformationSupportedSpecified">
            <remarks/>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Mappings">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Mappings.Mapping">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Mappings.Selector">
            <remarks/>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.Mapping">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Mapping.ClientSideText">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Mapping.ClientSideWebPart">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Mapping.Name">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Mapping.Default">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.Mapping.Functions">
            <remarks/>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.ClientSideText">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.ClientSideText.Text">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.ClientSideText.Order">
            <remarks/>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.ClientSideWebPart">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.ClientSideWebPart.Type">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.ClientSideWebPart.ControlId">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.ClientSideWebPart.JsonControlData">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.ClientSideWebPart.Order">
            <remarks/>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.ClientSideWebPartType">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.ClientSideWebPartType.Custom">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.ClientSideWebPartType.Text">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.ClientSideWebPartType.ContentRollup">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.ClientSideWebPartType.BingMap">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.ClientSideWebPartType.ContentEmbed">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.ClientSideWebPartType.DocumentEmbed">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.ClientSideWebPartType.Image">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.ClientSideWebPartType.ImageGallery">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.ClientSideWebPartType.LinkPreview">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.ClientSideWebPartType.NewsFeed">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.ClientSideWebPartType.NewsReel">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.ClientSideWebPartType.News">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.ClientSideWebPartType.PowerBIReportEmbed">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.ClientSideWebPartType.QuickChart">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.ClientSideWebPartType.SiteActivity">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.ClientSideWebPartType.VideoEmbed">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.ClientSideWebPartType.YammerEmbed">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.ClientSideWebPartType.Events">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.ClientSideWebPartType.GroupCalendar">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.ClientSideWebPartType.Hero">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.ClientSideWebPartType.List">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.ClientSideWebPartType.PageTitle">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.ClientSideWebPartType.People">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.ClientSideWebPartType.QuickLinks">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.ClientSideWebPartType.Divider">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.ClientSideWebPartType.MicrosoftForms">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.ClientSideWebPartType.Spacer">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.ClientSideWebPartType.ClientWebPart">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.ClientSideWebPartType.PowerApps">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.ClientSideWebPartType.CodeSnippet">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.ClientSideWebPartType.PageFields">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.ClientSideWebPartType.Weather">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.ClientSideWebPartType.YouTube">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.ClientSideWebPartType.MyDocuments">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.ClientSideWebPartType.YammerFullFeed">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.ClientSideWebPartType.CountDown">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.ClientSideWebPartType.ListProperties">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.ClientSideWebPartType.MarkDown">
            <remarks/>
        </member>
        <member name="F:SharePointPnP.Modernization.Framework.ClientSideWebPartType.Planner">
            <remarks/>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.AddOn">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.AddOn.Name">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.AddOn.Type">
            <remarks/>
        </member>
        <member name="P:SharePointPnP.Modernization.Framework.AddOn.Assembly">
            <remarks/>
        </member>
        <member name="T:SharePointPnP.Modernization.Framework.WebParts">
            <summary>
            Web part type constants
            </summary>
        </member>
        <member name="M:SharePointPnP.Modernization.Framework.WebParts.GetListOfWebParts(System.String)">
            <summary>
            Use reflection to read the object fields in a list of strings
            </summary>
        </member>
        <member name="T:System.Net.HttpWebRequestExtensions">
            <summary>
            HttpWebRequest extension methods
            </summary>
        </member>
        <member name="M:System.Net.HttpWebRequestExtensions.AddAuthenticationData(System.Net.HttpWebRequest,Microsoft.SharePoint.Client.ClientContext)">
            <summary>
            Grabs authenticaiton data from the passed client context and attaches that to the http request
            </summary>
            <param name="httpWebRequest">http request to update</param>
            <param name="cc">ClientContext object to grab authentication data from</param>
        </member>
        <member name="T:CamlBuilder.FieldReference">
            <summary>
            Represents a reference to a field within a query.
            </summary>
        </member>
        <member name="P:CamlBuilder.FieldReference.Alias">
            <summary>
            Field alias.
            </summary>
        </member>
        <member name="P:CamlBuilder.FieldReference.Ascending">
            <summary>
            This specifies the sort order on a FieldRef.
            </summary>
            <remarks>
            Query defaults this to true when no value is specified.
            </remarks>
        </member>
        <member name="P:CamlBuilder.FieldReference.CreateUrl">
            <summary>
            Specifies the URL for the .aspx file that is used to create a Meeting Workspace site.
            </summary>
        </member>
        <member name="P:CamlBuilder.FieldReference.DisplayName">
            <summary>
            This attribute provides the display name of the field that is referenced.
            </summary>
        </member>
        <member name="P:CamlBuilder.FieldReference.Explicit">
            <summary>
            This attribute is only supported within the ViewFields element. True if the field is 
            explicitly declared in the view definition and is not returned in a Fields enumeration inside a view.
            </summary>
        </member>
        <member name="P:CamlBuilder.FieldReference.Format">
            <summary>
            Field format.
            </summary>
        </member>
        <member name="P:CamlBuilder.FieldReference.Id">
            <summary>
            Specifies the GUID that identifies the field.
            </summary>
        </member>
        <member name="P:CamlBuilder.FieldReference.Key">
            <summary>
            If set to Primary, specifies that the field is the primary key for its table and thus
            uniquely identifies each record in the table.
            </summary>
        </member>
        <member name="P:CamlBuilder.FieldReference.List">
            <summary>
            Specifies the parent foreign list when the FieldRef element is a child of an Eq element
            in Join element. The value is an alias for the list that is defined by the ListAlias
            attribute of the Join element
            </summary>
        </member>
        <member name="P:CamlBuilder.FieldReference.LookupId">
            <summary>
            When the field is a Lookup type, specifies that queries should look for the item by its
            unique item ID rather than the field value. This can be useful, for example, when multiple
            items have identical values in the field and you want to query for a specific item.
            </summary>
            <remarks>
            Query default this to false when no value is specified
            </remarks>
        </member>
        <member name="P:CamlBuilder.FieldReference.Name">
            <summary>
            This attribute provides the internal name of the field that is referenced.
            </summary>
        </member>
        <member name="P:CamlBuilder.FieldReference.RefType">
            <summary>
            Specifies the type of reference for a field in an events list.
            </summary>
        </member>
        <member name="P:CamlBuilder.FieldReference.ShowField">
            <summary>
            The ShowField attribute can be set to the field name to display. By default, a hyperlinked text
            from the Title field of the record in the external list is displayed. But the ShowField attribute
            can be used to override that and display another field from the external list.
            </summary>
            <remarks>
            The following data types are allowed as targets of a ShowField attribute: Text, Choice, and Counter.
            </remarks>
        </member>
        <member name="P:CamlBuilder.FieldReference.TextOnly">
            <summary>
            Specifies that the field contains only text values.
            </summary>
        </member>
        <member name="P:CamlBuilder.FieldReference.Type">
            <summary>
            Specifies the function that is applied to a totals column or a calculated column.
            </summary>
        </member>
        <member name="M:CamlBuilder.FieldReference.#ctor">
            <summary>
            Creates an instance of FieldReference with all it's properties set to default.
            </summary>
        </member>
        <member name="M:CamlBuilder.FieldReference.#ctor(System.String)">
            <summary>
            Creates an instance of FieldReference with the initial specified <param name="name"></param>. 
            </summary>
            <param name="name">Internal name of the field.</param>
        </member>
        <member name="M:CamlBuilder.FieldReference.op_Implicit(System.String)~CamlBuilder.FieldReference">
            <summary>
            Uses <paramref name="fieldName"/> as a field reference internal name and returns
            a new <see cref="T:CamlBuilder.FieldReference"/>.
            </summary>
            <param name="fieldName">String to be used as FieldReference internal name.</param>
        </member>
        <member name="T:CamlBuilder.FieldReferenceFunctionType">
            <summary>
            Specifies the function that is applied to a totals column or a calculated column.
            </summary>
        </member>
        <member name="T:CamlBuilder.ListPropertyValueItem">
            <summary>
            Represents an item to be used by ListProperty value.
            </summary>
        </member>
        <member name="P:CamlBuilder.ListPropertyValueItem.AutoHyperLink">
            <summary>
            True to surround text with anchor tags if the text appears like a
            hyperlink, for example, www.microsoft.com.
            </summary>
        </member>
        <member name="P:CamlBuilder.ListPropertyValueItem.AutoHyperLinkNoEncoding">
            <summary>
            True to surround text with anchor tags if the text appears like a
            hyperlink (for example, www.microsoft.com) but without HTML encoding.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:CamlBuilder.ListPropertyValueItem.AutoNewLine" -->
        <member name="P:CamlBuilder.ListPropertyValueItem.Default">
            <summary>
            Sets the default ProgID for the application that created the list.
            </summary>
        </member>
        <member name="P:CamlBuilder.ListPropertyValueItem.ExpandXml">
            <summary>
            True to re-pass the rendered content through the Collaborative Application
            Markup Language (CAML) interpreter, which allows CAML to render CAML.
            </summary>
        </member>
        <member name="P:CamlBuilder.ListPropertyValueItem.HtmlEncode">
            <summary>
            True to convert embedded characters so that they are displayed as text in the
            browser. In other words, characters that could be confused with HTML tags are 
            converted to entities.
            </summary>
        </member>
        <member name="P:CamlBuilder.ListPropertyValueItem.Select">
            <summary>
            Specifies a field in the List of Lists table.
            </summary>
        </member>
        <member name="P:CamlBuilder.ListPropertyValueItem.StripWs">
            <summary>
            True to remove white space from the beginning and end of the value returned by the element.
            </summary>
        </member>
        <member name="P:CamlBuilder.ListPropertyValueItem.UrlEncode">
            <summary>
            True to convert special characters, such as spaces, to quoted UTF-8 format,
            for example, %c3%ab for character ë.
            </summary>
        </member>
        <member name="P:CamlBuilder.ListPropertyValueItem.UrlEncodeAsUrl">
            <summary>
            Like URLEncode, but true to specify that the string to encode is a path component of a
            URL and not to encode the forward slash (/).
            </summary>
        </member>
        <member name="M:CamlBuilder.ListPropertyValueItem.#ctor(System.String)">
            <summary>
            Creates an instance of ListPropertyValueItem with initial specified <paramref name="select"/>
            </summary>
            <param name="select">Specifies a field in the List of Lists table.</param>
        </member>
        <member name="T:CamlBuilder.LogicalJoin">
            <summary>
            Defines a CAML logical join. This class has no constructors available. To instanciate a
            new logical join use public static methods.
            </summary>
        </member>
        <member name="P:CamlBuilder.LogicalJoin.LogicalJoinType">
            <summary>
            Gets the logical join type.
            </summary>
        </member>
        <member name="M:CamlBuilder.LogicalJoin.AddStatement(CamlBuilder.Statement)">
            <summary>
            Adds a new statement to this logical join
            </summary>
            <param name="statement">Statement to be added.</param>
        </member>
        <member name="M:CamlBuilder.LogicalJoin.AddStatements(System.Collections.Generic.IEnumerable{CamlBuilder.Statement})">
            <summary>
            Adds new statements to this logical join.
            </summary>
            <param name="statements">Statements to be added to logical join.</param>
        </member>
        <member name="M:CamlBuilder.LogicalJoin.GetCaml">
            <summary>
            Returns CAML string representation of this
            logical join statement.
            </summary>
            <returns>CAML string.</returns>
        </member>
        <member name="M:CamlBuilder.LogicalJoin.And(CamlBuilder.Statement[])">
            <summary>
            Instanciates a new <i>And</i> logical join with specified inner <paramref name="statements"/>.
            </summary>
            <param name="statements">And statements.</param>
            <returns>And logical join instance.</returns>
        </member>
        <member name="M:CamlBuilder.LogicalJoin.And(System.Collections.Generic.IEnumerable{CamlBuilder.Statement})">
            <summary>
            Instanciates a new <i>And</i> logical join with specified inner <paramref name="statements"/>.
            </summary>
            <param name="statements">And statements.</param>
            <returns>And logical join instance.</returns>
        </member>
        <member name="M:CamlBuilder.LogicalJoin.Or(CamlBuilder.Statement[])">
            <summary>
            Instanciates a new <i>Or</i> logical join with specified inner <paramref name="statements"/>.
            </summary>
            <param name="statements">Or statements.</param>
            <returns>Or logical join instance.</returns>
        </member>
        <member name="M:CamlBuilder.LogicalJoin.Or(System.Collections.Generic.IEnumerable{CamlBuilder.Statement})">
            <summary>
            Instanciates a new <i>Or</i> logical join with specified inner <paramref name="statements"/>.
            </summary>
            <param name="statements">Or statements.</param>
            <returns>Or logical join instance.</returns>
        </member>
        <member name="T:CamlBuilder.LogicalJoinType">
            <summary>
            Specifies logical join types.
            </summary>
        </member>
        <member name="F:CamlBuilder.LogicalJoinType.Or">
            <summary>
            Indicates an Or logical join.
            </summary>
        </member>
        <member name="F:CamlBuilder.LogicalJoinType.And">
            <summary>
            Indicates an And logical join.
            </summary>
        </member>
        <member name="T:CamlBuilder.MembershipType">
            <summary>
            Defines membership types used by Membership operator.
            </summary>
            <seealso cref="M:CamlBuilder.Operator.Membership(CamlBuilder.FieldReference,CamlBuilder.MembershipType)"/>
        </member>
        <member name="F:CamlBuilder.MembershipType.SpWebAllUsers">
            <summary>
            Indicates SPWeb.AllUsers membership.
            </summary>
        </member>
        <member name="F:CamlBuilder.MembershipType.SpGroup">
            <summary>
            Indicates SPGroup membership.
            </summary>
        </member>
        <member name="F:CamlBuilder.MembershipType.SpWebGroups">
            <summary>
            Indicates SPWebGroups membership.
            </summary>
        </member>
        <member name="F:CamlBuilder.MembershipType.CurrentUserGroups">
            <summary>
            Indicates CurrentUserGroups membership.
            </summary>
        </member>
        <member name="F:CamlBuilder.MembershipType.SpWebUsers">
            <summary>
            Indicates SPWebUsers membership.
            </summary>
        </member>
        <member name="T:CamlBuilder.Operator">
            <summary>
            Defines a CAML operator. This is an abstract class. To instanciate an operator use public static methods.
            </summary>
        </member>
        <member name="P:CamlBuilder.Operator.OperatorType">
            <summary>
            Gets the operator type. 
            </summary>
        </member>
        <member name="P:CamlBuilder.Operator.FieldReference">
            <summary>
            Gets the name of the field on which this operator acts on.
            </summary>
        </member>
        <member name="M:CamlBuilder.Operator.IsNull(CamlBuilder.FieldReference)">
            <summary>
            Instanciates a new <i>IsNull</i> operator to perform on specified <paramref name="fieldRef"/>.
            </summary>
            <param name="fieldRef">Reference to the field to operate on.</param>
            <returns>IsNull operator instance.</returns>
        </member>
        <member name="M:CamlBuilder.Operator.IsNotNull(CamlBuilder.FieldReference)">
            <summary>
            Instanciates a new <i>IsNotNull</i> operator to perform on specified <paramref name="fieldRef"/>.
            </summary>
            <param name="fieldRef">Reference to the field to operate on.</param>
            <returns>IsNotNull operator instance.</returns>
        </member>
        <member name="M:CamlBuilder.Operator.Equal(CamlBuilder.FieldReference,CamlBuilder.ValueType,System.Object)">
            <summary>
            Instanciates a new <i>Equal</i> operator which will perform on specified <paramref name="fieldRef"/>.
            </summary>
            <param name="fieldRef">Reference to the field to operate on.</param>
            <param name="valueType">Field type</param>
            <param name="value">Value against which the value returned by the field element is compared to.</param>
            <returns>Equal operator instance.</returns>
        </member>
        <member name="M:CamlBuilder.Operator.Equal(CamlBuilder.FieldReference,CamlBuilder.Value)">
            <summary>
            Instanciates a new <i>Equal</i> operator which will perform on specified <paramref name="fieldRef"/>.
            </summary>
            <param name="fieldRef">Reference to the field to operate on.</param>
            <param name="value">Value against which the value returned by the field element is compared to.</param>
            <returns>Equal operator instance.</returns>
        </member>
        <member name="M:CamlBuilder.Operator.NotEqual(CamlBuilder.FieldReference,CamlBuilder.ValueType,System.Object)">
            <summary>
            Instanciates a new <i>NotEqual</i> operator which will perform on specified <paramref name="fieldRef"/>.
            </summary>
            <param name="fieldRef">Reference to the field to operate on.</param>
            <param name="valueType">Field type</param>
            <param name="value">Value against which the value returned by the field element is compared to.</param>
            <returns>NotEqual operator instance.</returns>
        </member>
        <member name="M:CamlBuilder.Operator.NotEqual(CamlBuilder.FieldReference,CamlBuilder.Value)">
            <summary>
            Instanciates a new <i>NotEqual</i> operator which will perform on specified <paramref name="fieldRef"/>.
            </summary>
            <param name="fieldRef">Reference to the field to operate on.</param>
            <param name="value">Value against which the value returned by the field element is compared to.</param>
            <returns>NotEqual operator instance.</returns>
        </member>
        <member name="M:CamlBuilder.Operator.BeginsWith(CamlBuilder.FieldReference,CamlBuilder.ValueType,System.Object)">
            <summary>
            Instanciates a new <i>BeginsWith</i> operator which will perform on specified <paramref name="fieldRef"/>.
            </summary>
            <param name="fieldRef">Reference to the field to operate on.</param>
            <param name="valueType">Field type</param>
            <param name="value">Value against which the value returned by the field element is compared to.</param>
            <returns>BeginsWith operator instance.</returns>
        </member>
        <member name="M:CamlBuilder.Operator.BeginsWith(CamlBuilder.FieldReference,CamlBuilder.Value)">
            <summary>
            Instanciates a new <i>BeginsWith</i> operator which will perform on specified <paramref name="fieldRef"/>.
            </summary>
            <param name="fieldRef">Reference to the field to operate on.</param>
            <param name="value">Value against which the value returned by the field element is compared to.</param>
            <returns>BeginsWith operator instance.</returns>
        </member>
        <member name="M:CamlBuilder.Operator.Contains(CamlBuilder.FieldReference,CamlBuilder.ValueType,System.Object)">
            <summary>
            Instanciates a new <i>Contains</i> operator which will perform on specified <paramref name="fieldRef"/>.
            </summary>
            <param name="fieldRef">Reference to the field to operate on.</param>
            <param name="valueType">Field type</param>
            <param name="value">Value against which the value returned by the field element is compared to.</param>
            <returns>Contains operator instance.</returns>
        </member>
        <member name="M:CamlBuilder.Operator.Contains(CamlBuilder.FieldReference,CamlBuilder.Value)">
            <summary>
            Instanciates a new <i>Contains</i> operator which will perform on specified <paramref name="fieldRef"/>.
            </summary>
            <param name="fieldRef">Reference to the field to operate on.</param>
            <param name="value">Value against which the value returned by the field element is compared to.</param>
            <returns>Contains operator instance.</returns>
        </member>
        <member name="M:CamlBuilder.Operator.DateRangesOverlap(CamlBuilder.FieldReference,CamlBuilder.ValueType,System.Object)">
            <summary>
            Instanciates a new <i>DateRangesOverlap</i> operator which will perform on specified <paramref name="fieldRef"/>.
            </summary>
            <param name="fieldRef">Reference to the field to operate on.</param>
            <param name="valueType">Field type</param>
            <param name="value">Value against which the value returned by the field element is compared to.</param>
            <returns>DateRangesOverlap operator instance.</returns>
        </member>
        <member name="M:CamlBuilder.Operator.DateRangesOverlap(CamlBuilder.FieldReference,CamlBuilder.Value)">
            <summary>
            Instanciates a new <i>DateRangesOverlap</i> operator which will perform on specified <paramref name="fieldRef"/>.
            </summary>
            <param name="fieldRef">Reference to the field to operate on.</param>
            <param name="value">Value against which the value returned by the field element is compared to.</param>
            <returns>DateRangesOverlap operator instance.</returns>
        </member>
        <member name="M:CamlBuilder.Operator.GreaterThan(CamlBuilder.FieldReference,CamlBuilder.ValueType,System.Object)">
            <summary>
            Instanciates a new <i>GreaterThan</i> operator which will perform on specified <paramref name="fieldRef"/>.
            </summary>
            <param name="fieldRef">Reference to the field to operate on.</param>
            <param name="valueType">Field type</param>
            <param name="value">Value against which the value returned by the field element is compared to.</param>
            <returns>GreaterThan operator instance.</returns>
        </member>
        <member name="M:CamlBuilder.Operator.GreaterThan(CamlBuilder.FieldReference,CamlBuilder.Value)">
            <summary>
            Instanciates a new <i>GreaterThan</i> operator which will perform on specified <paramref name="fieldRef"/>.
            </summary>
            <param name="fieldRef">Reference to the field to operate on.</param>
            <param name="value">Value against which the value returned by the field element is compared to.</param>
            <returns>GreaterThan operator instance.</returns>
        </member>
        <member name="M:CamlBuilder.Operator.GreaterThanOrEqualTo(CamlBuilder.FieldReference,CamlBuilder.ValueType,System.Object)">
            <summary>
            Instanciates a new <i>GreaterThanOrEqualTo</i> operator which will perform on specified <paramref name="fieldRef"/>.
            </summary>
            <param name="fieldRef">Reference to the field to operate on.</param>
            <param name="valueType">Field type</param>
            <param name="value">Value against which the value returned by the field element is compared to.</param>
            <returns>GreaterThanOrEqualTo operator instance.</returns>
        </member>
        <member name="M:CamlBuilder.Operator.GreaterThanOrEqualTo(CamlBuilder.FieldReference,CamlBuilder.Value)">
            <summary>
            Instanciates a new <i>GreaterThanOrEqualTo</i> operator which will perform on specified <paramref name="fieldRef"/>.
            </summary>
            <param name="fieldRef">Reference to the field to operate on.</param>
            <param name="value">Value against which the value returned by the field element is compared to.</param>
            <returns>GreaterThanOrEqualTo operator instance.</returns>
        </member>
        <member name="M:CamlBuilder.Operator.LowerThan(CamlBuilder.FieldReference,CamlBuilder.ValueType,System.Object)">
            <summary>
            Instanciates a new <i>LowerThan</i> operator which will perform on specified <paramref name="fieldRef"/>.
            </summary>
            <param name="fieldRef">Reference to the field to operate on.</param>
            <param name="valueType">Field type</param>
            <param name="value">Value against which the value returned by the field element is compared to.</param>
            <returns>LowerThan operator instance.</returns>
        </member>
        <member name="M:CamlBuilder.Operator.LowerThan(CamlBuilder.FieldReference,CamlBuilder.Value)">
            <summary>
            Instanciates a new <i>LowerThan</i> operator which will perform on specified <paramref name="fieldRef"/>.
            </summary>
            <param name="fieldRef">Reference to the field to operate on.</param>
            <param name="value">Value against which the value returned by the field element is compared to.</param>
            <returns>LowerThan operator instance.</returns>
        </member>
        <member name="M:CamlBuilder.Operator.LowerThanOrEqualTo(CamlBuilder.FieldReference,CamlBuilder.ValueType,System.Object)">
            <summary>
            Instanciates a new <i>LowerThanOrEqualTo</i> operator which will perform on specified <paramref name="fieldRef"/>.
            </summary>
            <param name="fieldRef">Reference to the field to operate on.</param>
            <param name="valueType">Field type</param>
            <param name="value">Value against which the value returned by the field element is compared to.</param>
            <returns>LowerThanOrEqualTo operator instance.</returns>
        </member>
        <member name="M:CamlBuilder.Operator.LowerThanOrEqualTo(CamlBuilder.FieldReference,CamlBuilder.Value)">
            <summary>
            Instanciates a new <i>LowerThanOrEqualTo</i> operator which will perform on specified <paramref name="fieldRef"/>.
            </summary>
            <param name="fieldRef">Reference to the field to operate on.</param>
            <param name="value">Value against which the value returned by the field element is compared to.</param>
            <returns>LowerThanOrEqualTo operator instance.</returns>
        </member>
        <member name="M:CamlBuilder.Operator.Includes(CamlBuilder.FieldReference,CamlBuilder.ValueType,System.Object)">
            <summary>
            Instanciates a new <i>Includes</i> operator which will perform on specified <paramref name="fieldRef"/>.
            </summary>
            <param name="fieldRef">Reference to the field to operate on.</param>
            <param name="valueType">Field type</param>
            <param name="value">Value against which the value returned by the field element is compared to.</param>
            <returns>Includes operator instance.</returns>
        </member>
        <member name="M:CamlBuilder.Operator.Includes(CamlBuilder.FieldReference,CamlBuilder.Value)">
            <summary>
            Instanciates a new <i>Includes</i> operator which will perform on specified <paramref name="fieldRef"/>.
            </summary>
            <param name="fieldRef">Reference to the field to operate on.</param>
            <param name="value">Value against which the value returned by the field element is compared to.</param>
            <returns>Includes operator instance.</returns>
        </member>
        <member name="M:CamlBuilder.Operator.NotIncludes(CamlBuilder.FieldReference,CamlBuilder.ValueType,System.Object)">
            <summary>
            Instanciates a new <i>NotIncludes</i> operator which will perform on specified <paramref name="fieldRef"/>.
            </summary>
            <param name="fieldRef">Reference to the field to operate on.</param>
            <param name="valueType">Field type</param>
            <param name="value">Value against which the value returned by the field element is compared to.</param>
            <returns>NotIncludes operator instance.</returns>
        </member>
        <member name="M:CamlBuilder.Operator.NotIncludes(CamlBuilder.FieldReference,CamlBuilder.Value)">
            <summary>
            Instanciates a new <i>NotIncludes</i> operator which will perform on specified <paramref name="fieldRef"/>.
            </summary>
            <param name="fieldRef">Reference to the field to operate on.</param>
            <param name="value">Value against which the value returned by the field element is compared to.</param>
            <returns>NotIncludes operator instance.</returns>
        </member>
        <member name="M:CamlBuilder.Operator.In(CamlBuilder.FieldReference,System.Collections.Generic.IEnumerable{CamlBuilder.Value})">
            <summary>
            Instanciates a new <i>In</i> operator which will perform on specified <paramref name="fieldRef"/>.
            </summary>
            <param name="fieldRef">Reference to the field to operate on.</param>
            <param name="values">Values against which the value returned by the field element is compared to.</param>
            <returns>In operator instance.</returns>
        </member>
        <member name="M:CamlBuilder.Operator.Membership(CamlBuilder.FieldReference,CamlBuilder.MembershipType)">
            <summary>
            Instanciates a new <i>Membership</i> operator which will perform on specified <paramref name="fieldRef"/>.
            </summary>
            <param name="fieldRef">Reference to the field to operate on.</param>
            <param name="membershipType">Type of membership for the operator to use to filter for.</param>
            <returns>Membership operator instance.</returns>
        </member>
        <member name="T:CamlBuilder.OperatorType">
            <summary>
            Specifies operator types.
            </summary>
        </member>
        <member name="F:CamlBuilder.OperatorType.Equal">
            <summary>
            Indicates an Equal operator
            </summary>
        </member>
        <member name="F:CamlBuilder.OperatorType.NotEqual">
            <summary>
            Indicates a NotEqual operator
            </summary>
        </member>
        <member name="F:CamlBuilder.OperatorType.GreaterThan">
            <summary>
            Indicates a GreaterThan operator
            </summary>
        </member>
        <member name="F:CamlBuilder.OperatorType.GreaterThanOrEqualTo">
            <summary>
            Indicates a GreaterThanOrEqualTo operator
            </summary>
        </member>
        <member name="F:CamlBuilder.OperatorType.LowerThan">
            <summary>
            Indicates a LowerThan operator
            </summary>
        </member>
        <member name="F:CamlBuilder.OperatorType.LowerThanOrEqualTo">
            <summary>
            Indicates a LowerThanOrEqualTo operator
            </summary>
        </member>
        <member name="F:CamlBuilder.OperatorType.IsNull">
            <summary>
            Indicates an IsNull operator
            </summary>
        </member>
        <member name="F:CamlBuilder.OperatorType.IsNotNull">
            <summary>
            Indicates an IsNotNull operator
            </summary>
        </member>
        <member name="F:CamlBuilder.OperatorType.BeginsWith">
            <summary>
            Indicates a BeginsWith operator
            </summary>
        </member>
        <member name="F:CamlBuilder.OperatorType.Contains">
            <summary>
            Indicates a Contains operator
            </summary>
        </member>
        <member name="F:CamlBuilder.OperatorType.DateRangesOverlap">
            <summary>
            Indicates a DateRangesOverlap operator
            </summary>
        </member>
        <member name="F:CamlBuilder.OperatorType.Includes">
            <summary>
            Indicates an Includes operator
            </summary>
        </member>
        <member name="F:CamlBuilder.OperatorType.NotIncludes">
            <summary>
            Indicates an NotIncludes operator
            </summary>
        </member>
        <member name="F:CamlBuilder.OperatorType.In">
            <summary>
            Indicates an In operator
            </summary>
        </member>
        <member name="F:CamlBuilder.OperatorType.Membership">
            <summary>
            Indicates a Membership operator
            </summary>
        </member>
        <member name="T:CamlBuilder.OrderByFieldOrder">
            <summary>
            Specifies the order of query result.
            </summary>
        </member>
        <member name="F:CamlBuilder.OrderByFieldOrder.Ascending">
            <summary>
            Defines ascending order.
            </summary>
        </member>
        <member name="F:CamlBuilder.OrderByFieldOrder.Descending">
            <summary>
            Specifies descending order.
            </summary>
        </member>
        <member name="T:CamlBuilder.Query">
            <summary>
            Class which represents a CAML query.
            </summary>
            <summary>
            Defines a CAML query. This class has no constructors available. To instanciate a
            new query use public static methods.
            </summary>
        </member>
        <member name="P:CamlBuilder.Query.Statement">
            <summary>
            Gets the statement holded by this query.
            </summary>
        </member>
        <member name="M:CamlBuilder.Query.Build(CamlBuilder.Statement)">
            <summary>
            Instanciates a new <i>Query</i> with the specified inner <paramref name="statement"/>
            </summary>
            <param name="statement"></param>
            <returns></returns>
        </member>
        <member name="M:CamlBuilder.Query.GetCaml(System.Boolean)">
            <summary>
            Returns query's CAML string representation
            </summary>
            <param name="whereClauseOnly">true to return only query's Where; otherwise false</param>
            <returns>Query CAML string surrounded by Query element or only the Where clause</returns>
        </member>
        <member name="M:CamlBuilder.Query.GetCaml">
            <summary>
            Returns query's CAML string representation surrounded by Query element
            </summary>
            <returns>Query CAML string surrounded by Query element.</returns>
        </member>
        <member name="M:CamlBuilder.Query.OrderBy(CamlBuilder.FieldReference)">
            <summary>
            Adds a new query sort order relatively to a specified <paramref name="fieldRef"/>.
            </summary>
            <param name="fieldRef">Reference to the field where to perform the ordering on.</param>
            <returns>Returns the query itself.</returns>
            <remarks>Use <see cref="P:CamlBuilder.FieldReference.Ascending"/> with false value to specify descending order.</remarks>
        </member>
        <member name="M:CamlBuilder.Query.OrderBy(System.Collections.Generic.IEnumerable{CamlBuilder.FieldReference})">
            <summary>
            Adds a collection of sort orders relatively to specified <paramref name="fieldRefs"/>.
            </summary>
            <param name="fieldRefs">References to the fields where to perform the ordering on.</param>
            <returns>Returns the query itself.</returns>
            <remarks>Use <see cref="P:CamlBuilder.FieldReference.Ascending"/> with false value to specify descending order.</remarks>
        </member>
        <member name="M:CamlBuilder.Query.GroupBy(CamlBuilder.FieldReference)">
            <summary>
            Specify the query's group-by options. Query will be grouped by specified <paramref name="fieldRef"/>.
            </summary>
            <param name="fieldRef">Reference to the field to group by.</param>
            <returns>Returns the query itself.</returns>
        </member>
        <member name="M:CamlBuilder.Query.GroupBy(System.Collections.Generic.IEnumerable{CamlBuilder.FieldReference})">
            <summary>
            Specify the query's group-by options. Query will be grouped by specified <paramref name="fieldRefs"/>.
            </summary>
            <param name="fieldRefs">References to the fields to group by.</param>
            <returns>Returns the query itself.</returns>
        </member>
        <member name="T:CamlBuilder.Statement">
            <summary>
            Defines a CAML statement. It can be a <see cref="T:CamlBuilder.LogicalJoin"/> or a <see cref="T:CamlBuilder.Operator"/>. 
            </summary>
        </member>
        <member name="T:CamlBuilder.Value">
            <summary>
            Defines a CAML value. This class has no constructors available.To instanciate a
            new value use public static methods.
            </summary>
        </member>
        <member name="P:CamlBuilder.Value.Type">
            <summary>
            Specifies the data type for the value contained by this element.
            </summary>
        </member>
        <member name="P:CamlBuilder.Value.IncludeTimeValue">
            <summary>
            Specifies to build DateTime queries based on time as well as date. If you do not set
            this attribute, the time portion of queries that involve date and time are ignored.
            </summary>
        </member>
        <member name="M:CamlBuilder.Value.Now">
            <summary>
            Value representng the current date and time.
            </summary>
            <returns>Value representng the current date and time.</returns>
        </member>
        <member name="M:CamlBuilder.Value.Now(System.Boolean)">
            <summary>
            Value representing the current date and time.
            </summary>
            <param name="includeTimeValue">True if is to be included the time part; otherwise, false</param>
            <returns>Value representng the current date and time.</returns>
        </member>
        <member name="M:CamlBuilder.Value.Month">
            <summary>
            Value representing the current month.
            
            Can be used in together with <see cref="M:CamlBuilder.Operator.DateRangesOverlap(CamlBuilder.FieldReference,CamlBuilder.ValueType,System.Object)"/> operator
            to retrieve from a calendar all instances of a recurring event that occur within a month.
            </summary>
            <returns>Value representing the current month.</returns>
        </member>
        <member name="M:CamlBuilder.Value.Month(System.Boolean)">
            <summary>
            Can be used in together with <see cref="M:CamlBuilder.Operator.DateRangesOverlap(CamlBuilder.FieldReference,CamlBuilder.ValueType,System.Object)"/> operator
            to retrieve from a calendar all instances of a recurring event that occur within a month.
            </summary>
            <param name="includeTimeValue">True if is to be included the time part; otherwise, false</param>
            <returns>Value representing the current month.</returns>
        </member>
        <member name="M:CamlBuilder.Value.Today">
            <summary>
            Value representing the current day.
            
            Renders the current date in the format that is relative to the server's local time zone. For servers in
            the United States, the format is MM/DD/YYYY (for example, 1/21/2001).
            </summary>
            <returns>Value representing the current day.</returns>
        </member>
        <member name="M:CamlBuilder.Value.Today(System.Int32)">
            <summary>
            Value representing the current day.
            
            Renders the current date in the format that is relative to the server's local time zone. For servers in
            the United States, the format is MM/DD/YYYY (for example, 1/21/2001).
            </summary>
            <param name="offset">Adds or subtracts the number of days that are specified by the positive or negative integer value.</param>
            <returns>Value representing the current day.</returns>
        </member>
        <member name="M:CamlBuilder.Value.Today(System.Boolean)">
            <summary>
            Value representing the current day.
            
            Renders the current date in the format that is relative to the server's local time zone. For servers in
            the United States, the format is MM/DD/YYYY (for example, 1/21/2001).
            </summary>
            <param name="includeTimeValue">True if is to be included the time part; otherwise, false</param>
            <returns>Value representing the current day.</returns>
        </member>
        <member name="M:CamlBuilder.Value.Today(System.Boolean,System.Int32)">
            <summary>
            Value representing the current day.
            
            Renders the current date in the format that is relative to the server's local time zone. For servers in
            the United States, the format is MM/DD/YYYY (for example, 1/21/2001).
            </summary>
            <param name="includeTimeValue">True if is to be included the time part; otherwise, false</param>
            <param name="offset">Adds or subtracts the number of days that are specified by the positive or negative integer value.</param>
            <returns>Value representing the current day.</returns>
        </member>
        <member name="M:CamlBuilder.Value.ObjectValue(CamlBuilder.ValueType,System.Object)">
            <summary>
            Can be used to represent any <paramref name="type"/> of value.
            </summary>
            <param name="type">Specifies the data type for the value contained by this element.</param>
            <param name="value">Value against which the value returned by the FieldRef element is compared</param>
            <returns>Value representing any object value.</returns>
            <remarks>
            CamlBuilder uses ToString() on top of <paramref name="value"/> to build the final CAML query.
            </remarks>
        </member>
        <member name="M:CamlBuilder.Value.ObjectValue(CamlBuilder.ValueType,System.Nullable{System.Boolean},System.Object)">
            <summary>
            Can be used to represent any <paramref name="type"/> of value.
            </summary>
            <param name="type">Specifies the data type for the value contained by this element.</param>
            <param name="includeTimeValue">
            Specifies to build DateTime queries based on time as well as date. If you set this to null
            the time portion of queries that involve date and time are ignored.
            </param>
            <param name="value">Value against which the value returned by the FieldRef element is compared</param>
            <returns>Value representing any object value.</returns>
            <remarks>
            CamlBuilder uses ToString() on top of <paramref name="value"/> to build the final CAML query.
            </remarks>
        </member>
        <member name="M:CamlBuilder.Value.UserId">
            <summary>
            Contains the value if the unique ID number of the currently authenticated user of a site, as
            defined in the UserInfo table of the content database.
            </summary>
            <returns>Value representing the currently authenticated user unique ID number.</returns>
        </member>
        <member name="M:CamlBuilder.Value.ListProperties(CamlBuilder.ValueType,System.Collections.Generic.IEnumerable{CamlBuilder.ListPropertyValueItem})">
            <summary>
            Value of a specified column in the List of Lists table.
            </summary>
            <param name="type">Specifies the data type for the value contained by this element.</param>
            <param name="listProperties">List of properties.</param>
            <returns>Value representing a list of lists table.</returns>
        </member>
        <member name="M:CamlBuilder.Value.ListProperties(CamlBuilder.ValueType,System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{CamlBuilder.ListPropertyValueItem})">
            <summary>
            Value of a specified column in the List of Lists table.
            </summary>
            <param name="type">Specifies the data type for the value contained by this element.</param>
            <param name="includeTimeValue">
            Specifies to build DateTime queries based on time as well as date. If you set this to null
            the time portion of queries that involve date and time are ignored.
            </param>
            <param name="listProperties">List of properties.</param>
            <returns>Value representing a list of lists table.</returns>
        </member>
        <member name="T:CamlBuilder.ValueType">
            <summary>
            Specifies types of reference for a field in a list.
            </summary>
        </member>
        <member name="F:CamlBuilder.ValueType.Text">
            <summary>
            Indicates a Text field type
            </summary>
        </member>
        <member name="F:CamlBuilder.ValueType.DateTime">
            <summary>
            Indicates a DateTime field type
            </summary>
        </member>
        <member name="F:CamlBuilder.ValueType.Integer">
            <summary>
            Indicates a Integer field type
            </summary>
        </member>
        <member name="F:CamlBuilder.ValueType.Note">
            <summary>
            Indicates a Note field type
            </summary>
        </member>
        <member name="F:CamlBuilder.ValueType.Choice">
            <summary>
            Indicates a Choice field type
            </summary>
        </member>
        <member name="F:CamlBuilder.ValueType.Number">
            <summary>
            Indicates a Number field type
            </summary>
        </member>
        <member name="F:CamlBuilder.ValueType.Guid">
            <summary>
            Indicates a Guid field type
            </summary>
        </member>
        <member name="F:CamlBuilder.ValueType.Boolean">
            <summary>
            Indicates a Boolean field type
            </summary>
        </member>
        <member name="F:CamlBuilder.ValueType.Counter">
            <summary>
            Indicates a Counter field type
            </summary>
        </member>
        <member name="F:CamlBuilder.ValueType.Currency">
            <summary>
            Indicates a Currency field type
            </summary>
        </member>
        <member name="F:CamlBuilder.ValueType.Url">
            <summary>
            Indicates an URL field type
            </summary>
        </member>
        <member name="F:CamlBuilder.ValueType.Computed">
            <summary>
            Indicates a Computed field type
            </summary>
        </member>
        <member name="F:CamlBuilder.ValueType.Lookup">
            <summary>
            Indicates a Lookup field type
            </summary>
        </member>
        <member name="F:CamlBuilder.ValueType.File">
            <summary>
            Indicates a File field type
            </summary>
        </member>
        <member name="F:CamlBuilder.ValueType.User">
            <summary>
            Indicates an User field type
            </summary>
        </member>
        <member name="F:CamlBuilder.ValueType.Attachments">
            <summary>
            Indicates an Attachments field type
            </summary>
        </member>
        <member name="F:CamlBuilder.ValueType.MultiChoice">
            <summary>
            Indicates a MultiChoice field type
            </summary>
        </member>
        <member name="F:CamlBuilder.ValueType.GridChoice">
            <summary>
            Indicates a GridChoice field type
            </summary>
        </member>
        <member name="F:CamlBuilder.ValueType.Threading">
            <summary>
            Indicates a Threading field type
            </summary>
        </member>
        <member name="F:CamlBuilder.ValueType.CrossProjectLink">
            <summary>
            Indicates a CrossProjectLink field type
            </summary>
        </member>
        <member name="F:CamlBuilder.ValueType.Recurrence">
            <summary>
            Indicates a Recurrence field type
            </summary>
        </member>
        <member name="F:CamlBuilder.ValueType.ModStat">
            <summary>
            Indicates a ModStat field type
            </summary>
        </member>
        <member name="F:CamlBuilder.ValueType.ContentTypeId">
            <summary>
            Indicates a ContentTypeId field type
            </summary>
        </member>
        <member name="F:CamlBuilder.ValueType.WorkflowStatus">
            <summary>
            Indicates a WorkflowStatus field type
            </summary>
        </member>
        <member name="F:CamlBuilder.ValueType.AllDayEvent">
            <summary>
            Indicates a AllDayEvent field type
            </summary>
        </member>
        <member name="F:CamlBuilder.ValueType.Error">
            <summary>
            Indicates an Error field type
            </summary>
        </member>
        <member name="F:CamlBuilder.ValueType.WorkflowEventType">
            <summary>
            Indicates a WorkflowEventType field type
            </summary>
        </member>
        <member name="T:Microsoft.SharePoint.Client.ListItemExtensions">
            <summary>
            Extension methods for the ListItem object
            </summary>
        </member>
        <member name="M:Microsoft.SharePoint.Client.ListItemExtensions.PageType(Microsoft.SharePoint.Client.ListItem)">
            <summary>
            Determines the type of page
            </summary>
            <param name="item">Page list item</param>
            <returns>Type of page</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.ListItemExtensions.WebParts(Microsoft.SharePoint.Client.ListItem,SharePointPnP.Modernization.Framework.PageTransformation)">
            <summary>
            Gets the web part information from the page
            </summary>
            <param name="item">Page list item</param>
            <param name="pageTransformation">PageTransformation model loaded from XML</param>
            <returns>Page layout + collection of web parts on the page</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.ListItemExtensions.LastModifiedDateTime(Microsoft.SharePoint.Client.ListItem)">
            <summary>
            Get's the page last modified date time
            </summary>
            <param name="item">Page list item</param>
            <returns>DateTime of the last modification</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.ListItemExtensions.LastModifiedBy(Microsoft.SharePoint.Client.ListItem)">
            <summary>
            Get's the page last modified by
            </summary>
            <param name="item">Page list item</param>
            <returns>Last modified by user/account</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.ListItemExtensions.LastPublishedDateTime(Microsoft.SharePoint.Client.ListItem)">
            <summary>
            Get's the blog last published date time
            </summary>
            <param name="item">Page list item</param>
            <returns>DateTime of the last modification</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.ListItemExtensions.PageLayoutFile(Microsoft.SharePoint.Client.ListItem)">
            <summary>
            Get's the page page layout file
            </summary>
            <param name="item">Page list item</param>
            <returns>Page layout file defined for this page</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.ListItemExtensions.PageLayout(Microsoft.SharePoint.Client.ListItem)">
            <summary>
            Get's the page page layout
            </summary>
            <param name="item">Page list item</param>
            <returns>Page layout defined for this page</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.ListItemExtensions.Audiences(Microsoft.SharePoint.Client.ListItem)">
            <summary>
            Get's the page audience(s)
            </summary>
            <param name="item">Page list item</param>
            <returns>Page layout defined for this page</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.ListItemExtensions.GetFieldValueAs``1(Microsoft.SharePoint.Client.ListItem,System.String)">
            <summary>
            Gets the field value (if the field exists and a value is set) in the given type
            </summary>
            <typeparam name="T">Type the get the fieldValue in</typeparam>
            <param name="item">List item to get the field from</param>
            <param name="fieldName">Name of the field to get the value from</param>
            <returns>Value of the field in the requested type</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.ListItemExtensions.Transform(Microsoft.SharePoint.Client.ListItem,SharePointPnP.Modernization.Framework.Transform.PageTransformationInformation)">
            <summary>
            Transforms a classic wiki/webpart page into a modern page, using the default page transformation model (webpartmapping.xml)
            </summary>
            <param name="sourcePage">ListItem for the classic wiki/webpart page</param>
            <param name="pageTransformationInformation">Information to drive the page transformation process</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.ListItemExtensions.Transform(Microsoft.SharePoint.Client.ListItem,SharePointPnP.Modernization.Framework.Transform.PageTransformationInformation,System.String)">
            <summary>
            Transforms a classic wiki/webpart page into a modern page using a custom transformation model
            </summary>
            <param name="sourcePage">ListItem for the classic wiki/webpart page</param>
            <param name="pageTransformationInformation">Information to drive the page transformation process</param>
            <param name="pageTransformationFile">Page transformation model to be used</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.ListItemExtensions.FieldExistsAndUsed(Microsoft.SharePoint.Client.ListItem,System.String)">
            <summary>
            Checks if a listitem contains a field with a value
            </summary>
            <param name="item">List item to check</param>
            <param name="fieldName">Name of the field to check</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.ListItemExtensions.FieldExists(Microsoft.SharePoint.Client.ListItem,System.String)">
            <summary>
            Checks if a listitem contains a field
            </summary>
            <param name="item">List item to check</param>
            <param name="fieldName">Name of the field to check</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.SharePoint.Client.SiteExtensions">
            <summary>
            Class holding extension methods for the Microsoft.SharePoint.Client.Site object
            </summary>
        </member>
        <member name="M:Microsoft.SharePoint.Client.SiteExtensions.GetAllSubSites(Microsoft.SharePoint.Client.Site)">
            <summary>
            Gets all sub sites for a given site
            </summary>
            <param name="site">Site to find all sub site for</param>
            <returns>IEnumerable of strings holding the sub site urls</returns>
        </member>
        <member name="T:Microsoft.SharePoint.Client.WebExtensions">
            <summary>
            Class holding extension methods for the Microsoft.SharePoint.Client.Web object
            </summary>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WebExtensions.GetPages(Microsoft.SharePoint.Client.Web,System.String,System.String)">
            <summary>
            Returns the site pages from a web, optionally filtered on pagename
            </summary>
            <param name="web">Web to get the pages from</param>
            <param name="pageNameStartsWith">Filter to get all pages starting with</param>
            <param name="folder"></param>
            <returns>A list of pages (ListItem intances)</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WebExtensions.GetPagesFromList(Microsoft.SharePoint.Client.Web,System.String,System.String,System.String)">
            <summary>
            Returns the site pages from a web, optionally filtered on pagename
            </summary>
            <param name="web">Web to get the pages from</param>
            <param name="webRelativeListName">Web relative URL of the list (e.g. SiteAssets)</param>
            <param name="pageNameStartsWith">Filter to get all pages starting with</param>
            <param name="folder">Folder to search in</param>
            <returns>A list of pages (ListItem intances)</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WebExtensions.GetBlogsFromList(Microsoft.SharePoint.Client.Web,System.String,System.String,System.String)">
            <summary>
            Returns the blogs from a web, optionally filtered on blog name
            </summary>
            <param name="web">Web to get the blogs from</param>
            <param name="webRelativeListName">Web relative URL of the blog list (e.g. Posts)</param>
            <param name="pageNameStartsWith">Filter to get all blogs starting with</param>
            <param name="folder">Folder to search in</param>
            <returns>A list of pages (ListItem intances)</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WebExtensions.GetAdmins(Microsoft.SharePoint.Client.Web)">
            <summary>
            Returns the admins of this site
            </summary>
            <param name="web">Site to scan</param>
            <returns>List of admins</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WebExtensions.GetOwners(Microsoft.SharePoint.Client.Web)">
            <summary>
            Returns owners of this web
            </summary>
            <param name="web">Web to scan</param>
            <returns>List of owners</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WebExtensions.GetMembers(Microsoft.SharePoint.Client.Web)">
            <summary>
            Returns members of this site
            </summary>
            <param name="web">Web to scan</param>
            <returns>Members of this web</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WebExtensions.GetVisitors(Microsoft.SharePoint.Client.Web)">
            <summary>
            Returns visitors of this site
            </summary>
            <param name="web">Web to scan</param>
            <returns>Visitors of this web</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WebExtensions.ClaimsHaveRoleAssignment(Microsoft.SharePoint.Client.Web,System.String,System.String)">
            <summary>
            Checks if the passed claims are assigned a role
            </summary>
            <param name="web">Web to check</param>
            <param name="claim1">Claim to check</param>
            <param name="claim2">Claim to check</param>
            <returns>True if claim1 or claim2 has a role</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WebExtensions.GetEveryoneExceptExternalUsersClaim(Microsoft.SharePoint.Client.Web)">
            <summary>
            Resolves the Everyone Except External Users claim
            </summary>
            <param name="web">web to use for the resolving</param>
            <returns>Loginname for the "Everyone Except External Users" claim</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WebExtensions.GetUrl(Microsoft.SharePoint.Client.Web)">
            <summary>
            Method to bypass missing property in SharePoint 2010
            </summary>
            <param name="web">Web to operate on</param>
            <remarks>Only required on source contexts</remarks>
            <returns>web url</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WebExtensions.GetPagesLibraryId(Microsoft.SharePoint.Client.Web)">
            <summary>
            Get Pages Library ID for the Web
            </summary>
            <param name="web">Web to operate on</param>
            <returns>ID of the pages library</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WebExtensions.GetSitePagesLibrary(Microsoft.SharePoint.Client.Web)">
            <summary>
            Gets site pages library from web
            </summary>
            <param name="web">Web to operate on</param>
            <returns>Site pages library instance</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WebExtensions.GetPostsLibrary(Microsoft.SharePoint.Client.Web)">
            <summary>
            Gets blog post library in an SP2010 compatible fashion
            </summary>
            <param name="web">Web to operate on</param>
            <returns>Blog post library</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WebExtensions.GetListByName(Microsoft.SharePoint.Client.Web,System.String)">
            <summary>
            Gets list from web in an SP2010 compatible fashion
            </summary>
            <param name="web">Web to operate on</param>
            <param name="listName">List to lookup</param>
            <returns>List instance</returns>
        </member>
        <member name="T:AngleSharp.Dom.AngleSharpExtensions">
            <summary>
            Extension methods for AngleSharp
            </summary>
        </member>
        <member name="M:AngleSharp.Dom.AngleSharpExtensions.PartialMatch(AngleSharp.Dom.ITokenList,System.String)">
            <summary>
            Performs a partial match on a list of tokens (e.g. classes on an element)
            </summary>
            <param name="tokenList">List of tokens to search in</param>
            <param name="filter">Partial token to match via an StartsWidth</param>
            <returns>First matching token if found, null if no match</returns>
        </member>
    </members>
</doc>
